/*! For license information please see main.js.LICENSE.txt */
(()=>{"use strict";class t{constructor(t=null,e="div",n=[],a=""){const i=document.createElement(e);i.classList.add(...n),i.textContent=a,t&&t.append(i),this.node=i}destroy(){this.node.remove()}}class e extends t{constructor(t,e="div",n=["header"]){super(t,e,n),this.node.innerHTML='\n      <div class="container header__container">\n        <ul class="header__navbar">\n          <li class="header__navbar-item">\n            <a class="header__navbar-link" \n              href="#garage" >to garage</a>\n          </li>\n          <li class="header__navbar-item">\n            <a class="header__navbar-link" \n              href="#winners">to winners</a>\n          </li>\n        </ul>\n      </div>\n    ',this.toGarageLink=this.node.querySelector('.header__navbar-link[href="#garage"]'),this.toWinnersLink=this.node.querySelector('.header__navbar-link[href="#winners"]'),window.addEventListener("hashchange",this.updateActivePageIndicator.bind(this)),window.addEventListener("load",this.updateActivePageIndicator.bind(this))}updateActivePageIndicator(){const t=location.hash.slice(1)||"garage";switch(t){case"garage":this.toGarageLink.classList.add("active-page"),this.toWinnersLink.classList.remove("active-page");break;case"winners":this.toWinnersLink.classList.add("active-page"),this.toGarageLink.classList.remove("active-page");break;default:console.error(`${t} page not found`)}}}const n=["250 GTO","3","458 Italia","4x4","599 GTO","911","A3","A5","A7","A8","Aventador","Camry","Captiva","Cayenne","Cobalt","Corolla","Cybertruck","ES","Enzo","FX37","FXX","Focus","GS","GT4","GX","Gallardo","Impreza","Kalina","LC500","LS","LX","Lacetti","Matiz","Nexia","Priora","RAV4","RX","Rio","Roadster","S","Spark","TT","Vesta","WRX","X","X3","X5","X6","X7","Y"],a=["Alfa Romeo","Alpina","Aston Martin","Audi","Axon","Chevrolet","Daewoo","Ferrari","Fiat","Ford","GAZ","GMC","Honda","Hummer","Hyundai","Infiniti","Isuzu","JAC","Jaguar","Jeep","Kamaz","Lada","Lexus","Lotus","MAN","MAZ","Maybach","Mazda","Mazzanti","McLaren","Nissan","Opel","Paccar","Pagani","Pontiac","Porsche","RAM","Renault","Saab","Skoda","Smart","Subaru","Suzuki","TVR","Tesla","Toyota","UAZ","Volvo","XPeng","ZAZ"];function i(t,e){const n=Math.ceil(t),a=Math.floor(e);return Math.floor(Math.random()*(a-n+1))+n}function s(){const t="0123456789abcdef";let e="#";for(let n=0;n<6;n++)e+=t[i(0,t.length-1)];return e}function r(t){const{top:e,left:n,width:a,height:i}=t.getBoundingClientRect();return{x:n+a/2,y:e+i/2}}var C,o,d;!function(t){t.id="id",t.wins="wins",t.time="time"}(C||(C={})),function(t){t.ASC="ASC",t.DESC="DESC"}(o||(o={})),function(t){t.started="started",t.stopped="stopped",t.drive="drive"}(d||(d={}));var l=function(t,e,n,a){return new(n||(n=Promise))((function(i,s){function r(t){try{o(a.next(t))}catch(t){s(t)}}function C(t){try{o(a.throw(t))}catch(t){s(t)}}function o(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,C)}o((a=a.apply(t,e||[])).next())}))};const c="http://127.0.0.1:3000",h=`${c}/garage`,p=`${c}/winners`,u=`${c}/engine`,g=new class{constructor(){this._state={cars:[],countCars:0,carsCurrentPage:1,limitPageCarsList:7,winners:[],countWinners:0,winnersCurrentPage:1,limitPageWinnersList:10,currentUpdateCarId:null,generateManyCarsCount:100,animatedCarsData:{},isWinnerAlreadyChosen:!1,canceledRase:!1,winnerPageSort:C.id,winnerPageOrder:o.ASC}}get state(){return this._state}set state(t){this._state=t}fetchCarsListToState(){return l(this,void 0,void 0,(function*(){const t=yield fetch(`${h}?_page=${this.state.carsCurrentPage}&_limit=${this.state.limitPageCarsList}`),e=yield t.json(),n=+t.headers.get("X-Total-Count");this.state.cars=e,this.state.countCars=n}))}getSpecifiedCar(t){return l(this,void 0,void 0,(function*(){const e=yield fetch(`${h}/${t}`);return yield e.json()}))}createCar(t){return l(this,void 0,void 0,(function*(){yield fetch(h,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),yield this.fetchCarsListToState()}))}deleteCar(t){return l(this,void 0,void 0,(function*(){yield fetch(`${h}/${t}`,{method:"DELETE"}),yield this.fetchCarsListToState()}))}fetchWinnersListToState(){return l(this,void 0,void 0,(function*(){const t=this.state.winnersCurrentPage,e=this.state.limitPageWinnersList,n=yield fetch(`${p}?_page=${t}&_limit=${e}&_sort=${this.state.winnerPageSort}&_order=${this.state.winnerPageOrder}`),a=yield n.json(),i=+n.headers.get("X-Total-Count");this.state.winners=a,this.state.countWinners=i}))}updateWinner(t){return l(this,void 0,void 0,(function*(){yield fetch(`${p}/${t.id}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),yield this.fetchWinnersListToState()}))}createWinner(t){return l(this,void 0,void 0,(function*(){yield fetch(p,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),yield this.fetchWinnersListToState()}))}deleteWinner(t){return l(this,void 0,void 0,(function*(){yield fetch(`${p}/${t}`,{method:"DELETE"}),yield this.fetchWinnersListToState()}))}updateCar(t,e){return l(this,void 0,void 0,(function*(){yield fetch(`${h}/${e}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),yield this.fetchCarsListToState()}))}generateManyCars(){return l(this,void 0,void 0,(function*(){const t=[];for(let e=0;e<this.state.generateManyCarsCount;e++){const e={name:`${a[i(0,a.length-1)]} ${n[i(0,n.length-1)]}`,color:s()};t.push(this.createCar(e))}yield Promise.all(t),yield this.fetchCarsListToState()}))}setStatusForCarsEngine(t,e){return l(this,void 0,void 0,(function*(){const n=yield fetch(`${u}?id=${t}&status=${e}`,{method:"PATCH"});return yield n.json()}))}};class _ extends t{constructor(t,e="div",n=[]){super(t,e,n),this.node.innerHTML='\n      <div class="table-head__information-wrap">\n        <div class="table-head__total-indicator-wrap">\n          <span class="table-head__total-indicator-label">Total cars</span>\n          <span class="table-head__total-indicator-value">unknown</span>\n        </div>\n        <div class="table-head__page-indicator-wrap">\n          <span class="table-head__page-indicator-label">Page #</span>\n          <span class="table-head__page-indicator-value">unknown</span>\n        </div>\n      </div>\n      <div class="table-head__navigation-wrap">\n        <button class="table-head__navigation table-head__navigation_prev common-btn">prev page</button>\n        <button class="table-head__navigation table-head__navigation_next common-btn">next page</button>\n      </div>\n    ',this.totalCarsCount=this.node.querySelector(".table-head__total-indicator-value"),this.currentPageIndicator=this.node.querySelector(".table-head__page-indicator-value"),this.prevPageBtn=this.node.querySelector(".table-head__navigation_prev"),this.nextPageBtn=this.node.querySelector(".table-head__navigation_next")}checkIfBtnNeedDisable(){const t=g.state.carsCurrentPage,e=Math.ceil(g.state.countCars/g.state.limitPageCarsList);this.prevPageBtn.disabled=!1,this.nextPageBtn.disabled=!1,1===t&&(this.prevPageBtn.disabled=!0),e<=t&&(this.nextPageBtn.disabled=!0)}render(){return this.checkIfBtnNeedDisable(),this.totalCarsCount.textContent=g.state.countCars.toString(),this.currentPageIndicator.textContent=g.state.carsCurrentPage.toString(),this.node}}class L extends t{constructor(t,e="div",n=[],a="content not found"){super(t,e,n),this.node.innerHTML=`\n      <div class="popup__back-area">\n        <div class="popup__body">\n          ${a}\n          <button class="popup__close-btn common-btn">OK</button>\n        </div>\n      </div>\n    `,this.backArea=this.node.querySelector(".popup__back-area"),this.body=this.node.querySelector(".popup__body"),this.closeBtn=this.node.querySelector(".popup__close-btn"),this.backArea.addEventListener("click",(t=>{t.stopPropagation(),this.destroy()})),this.closeBtn.addEventListener("click",(t=>{t.stopPropagation(),this.destroy()}))}render(){return this.node}}class f extends t{constructor(t,e="span",n=["car__image"],a="#FFFF00"){super(t,e,n),this.node.innerHTML=`\n    <svg class = "car__image" width="961" height="478" viewBox="0 0 961 478" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M558.583 8C557.074 8.009 553.862 8.30491 552.114 8.9375L548.614 10.4375L557.271 46.3755L432.46 46.6567C430.024 46.6617 427.573 46.6427 425.117 46.6255C420.205 46.5912 415.252 46.521 410.273 46.4068C402.98 46.2395 395.604 45.9939 388.211 45.688C387.815 45.6716 387.419 45.6423 387.023 45.6255C372.091 44.9954 357.016 44.1338 341.992 43.188C321.666 41.9053 301.472 40.4806 281.868 39.313C267.34 38.4477 253.136 37.7334 239.493 37.313C230.124 37.0243 221.029 36.8565 212.243 36.9068C207.927 36.9315 203.675 37.0001 199.524 37.1255C195.373 37.251 191.144 37.4808 186.868 37.7818C184.73 37.9323 182.591 38.092 180.431 38.2818C173.962 38.8502 167.386 39.6032 160.837 40.4693C160.827 40.4703 160.816 40.4683 160.806 40.4693C156.433 41.0479 152.087 41.6948 147.744 42.3755C143.4 43.0562 139.07 43.7733 134.807 44.5317C130.553 45.2883 126.336 46.0971 122.213 46.9067C122.203 46.9087 122.191 46.9047 122.181 46.9067C120.115 47.3125 118.112 47.7109 116.088 48.1255C110.026 49.3671 104.154 50.6415 98.5878 51.9067C98.5777 51.9087 98.5667 51.9047 98.5566 51.9067C94.8401 52.7516 91.2694 53.5819 87.8376 54.4067C80.9738 56.0551 74.7226 57.6413 69.3066 59.0629C61.183 61.1954 54.9246 62.9901 51.2126 64.0629C48.739 64.7787 47.4001 65.1879 47.4001 65.1879L33.7131 68.9379C32.8107 69.1867 31.935 69.6308 31.0881 70.2504C30.8004 70.4609 30.5258 70.6864 30.2444 70.9379C29.1448 71.9175 28.0934 73.2086 27.0882 74.7817C27.0836 74.7887 27.0928 74.806 27.0882 74.8129C26.5878 75.5977 26.0657 76.4534 25.5882 77.3754C25.584 77.3834 25.5924 77.3986 25.5882 77.4066C25.1106 78.3303 24.637 79.3208 24.182 80.3754C24.1783 80.3844 24.1857 80.3976 24.182 80.4066C20.515 88.9161 17.562 101.538 15.2446 116.626C15.2431 116.636 15.2461 116.647 15.2446 116.657C15.2086 116.891 15.1865 117.14 15.1508 117.376C14.6462 120.707 14.1588 124.174 13.7133 127.72C13.6828 127.962 13.6498 128.195 13.6196 128.438C13.118 132.481 12.6728 136.641 12.2446 140.907C12.2436 140.917 12.2456 140.928 12.2446 140.938C12.031 143.067 11.8154 145.233 11.6196 147.407C11.6186 147.417 11.6205 147.428 11.6196 147.438C11.4238 149.613 11.2356 151.788 11.0571 154.001C11.0562 154.011 11.0579 154.022 11.0571 154.032C10.6993 158.47 10.3789 162.978 10.0883 167.532C10.0877 167.542 10.089 167.553 10.0883 167.563C9.21574 181.247 8.62874 195.352 8.30714 209.125C8.30689 209.136 8.30738 209.146 8.30714 209.157C8.09271 218.346 7.99454 227.37 7.99454 236.064C7.99454 237.031 8.02209 238.026 8.02579 239.001C8.02209 239.976 7.99454 240.971 7.99454 241.939C7.99454 250.632 8.0927 259.656 8.30704 268.845C8.30728 268.855 8.30679 268.865 8.30704 268.876C8.62869 282.65 9.21568 296.754 10.0882 310.438C10.0889 310.448 10.0876 310.459 10.0882 310.469C10.3788 315.023 10.6992 319.531 11.057 323.969C11.0578 323.979 11.0562 323.99 11.057 324C11.2355 326.213 11.4237 328.388 11.6195 330.563C11.6204 330.573 11.6185 330.584 11.6195 330.594C11.8153 332.768 12.0309 334.934 12.2445 337.063C12.2455 337.073 12.2435 337.084 12.2445 337.094C12.6727 341.36 13.1179 345.52 13.6195 349.563C13.6497 349.806 13.6827 350.039 13.7132 350.282C14.1587 353.827 14.6461 357.294 15.1507 360.626C15.1864 360.861 15.2085 361.11 15.2445 361.344C15.246 361.354 15.243 361.366 15.2445 361.376C17.5619 376.463 20.5149 389.085 24.1819 397.595C24.1856 397.604 24.1782 397.617 24.1819 397.626C24.6369 398.68 25.1105 399.671 25.5881 400.595C25.5923 400.603 25.5839 400.618 25.5881 400.626C26.0656 401.548 26.5877 402.404 27.0881 403.188C27.0927 403.195 27.0835 403.212 27.0881 403.219C28.0933 404.793 29.1447 406.084 30.2443 407.063C30.5257 407.315 30.8003 407.54 31.088 407.751C31.9349 408.37 32.8106 408.815 33.713 409.063L47.4 412.813C47.4 412.813 48.7388 413.223 51.2125 413.938C54.9236 415.011 61.1825 416.806 69.3065 418.938C74.7222 420.36 80.9735 421.946 87.8375 423.594C91.2689 424.419 94.8397 425.25 98.5565 426.094C98.5667 426.096 98.5776 426.092 98.5877 426.094C104.154 427.36 110.026 428.634 116.088 429.876C118.112 430.29 120.115 430.689 122.181 431.094C122.191 431.096 122.203 431.092 122.213 431.094C126.336 431.904 130.553 432.713 134.807 433.469C139.071 434.228 143.4 434.945 147.744 435.626C152.087 436.306 156.433 436.953 160.806 437.532C160.816 437.533 160.827 437.531 160.837 437.532C167.385 438.398 173.962 439.151 180.431 439.719C182.59 439.909 184.73 440.069 186.868 440.219C191.144 440.52 195.374 440.75 199.524 440.876C203.675 441.001 207.927 441.07 212.243 441.094C221.029 441.145 230.124 440.977 239.493 440.688C253.135 440.268 267.34 439.553 281.868 438.688C301.472 437.521 321.666 436.096 341.992 434.813C357.016 433.867 372.09 433.006 387.023 432.376C387.419 432.359 387.815 432.33 388.211 432.313C395.604 432.007 402.981 431.762 410.273 431.594C415.251 431.48 420.204 431.41 425.117 431.376C427.573 431.358 430.024 431.339 432.46 431.344L557.27 431.626L548.614 467.564L552.114 469.064C553.862 469.696 557.074 469.992 558.583 470.001C559.432 470.006 560.338 469.927 561.27 469.751C561.581 469.693 561.894 469.61 562.208 469.532C562.513 469.457 562.841 469.376 563.145 469.282C563.774 469.089 564.409 468.861 565.02 468.595C566.842 467.801 568.555 466.664 569.802 465.282C569.812 465.272 569.823 465.262 569.833 465.251C570.458 464.553 570.945 463.8 571.301 462.97L583.457 431.658L693.397 431.908C694.144 432.282 694.874 432.653 695.616 433.002C698.595 434.401 701.527 435.599 704.46 436.627C705.922 437.139 707.378 437.602 708.835 438.033C713.935 439.541 719.023 440.585 724.179 441.283C727.125 441.682 730.105 441.977 733.116 442.189C734.622 442.295 736.15 442.369 737.679 442.439C740.736 442.579 743.817 442.652 746.991 442.689C753.338 442.763 759.97 442.689 766.991 442.689C777.401 442.689 787.313 442.158 796.772 441.127C800.556 440.714 804.263 440.229 807.897 439.658C815.165 438.516 822.125 437.039 828.803 435.283C830.472 434.844 832.139 434.384 833.772 433.908C838.671 432.479 843.385 430.883 847.959 429.127C849.484 428.542 851.001 427.966 852.49 427.346C855.468 426.104 858.372 424.789 861.209 423.408C862.627 422.718 864.044 422.007 865.427 421.283C868.194 419.834 870.894 418.303 873.521 416.721C874.834 415.929 876.117 415.107 877.396 414.283C883.79 410.163 889.759 405.658 895.302 400.752C899.731 396.833 903.903 392.672 907.802 388.283C907.807 388.277 907.797 388.258 907.802 388.252C908.772 387.159 909.739 386.06 910.677 384.939C910.682 384.933 910.672 384.914 910.677 384.908C911.615 383.787 912.553 382.65 913.458 381.502C913.463 381.496 913.453 381.477 913.458 381.471C916.184 378.013 918.771 374.452 921.208 370.752C921.213 370.745 921.203 370.728 921.208 370.721C922.017 369.492 922.837 368.256 923.614 367.002C923.619 366.994 923.609 366.978 923.614 366.971C925.955 363.192 928.181 359.318 930.239 355.315C930.243 355.307 930.235 355.291 930.239 355.283C930.922 353.954 931.587 352.605 932.239 351.252C932.243 351.244 932.235 351.229 932.239 351.221C932.891 349.868 933.555 348.504 934.177 347.127C934.181 347.118 934.173 347.105 934.177 347.096C935.423 344.334 936.615 341.544 937.739 338.69C937.743 338.681 937.735 338.667 937.739 338.659C938.299 337.236 938.834 335.791 939.364 334.346C939.367 334.337 939.361 334.324 939.364 334.315C939.894 332.87 940.426 331.407 940.927 329.94C941.427 328.473 941.925 326.991 942.395 325.502C942.398 325.493 942.392 325.48 942.395 325.471C942.865 323.983 943.33 322.481 943.77 320.971C943.773 320.961 943.767 320.95 943.77 320.94C944.211 319.43 944.64 317.908 945.051 316.378C945.054 316.368 945.048 316.356 945.051 316.346C946.29 311.736 947.42 307.04 948.395 302.252V302.221C948.719 300.632 949.006 299.017 949.301 297.409V297.377C951.376 286.059 952.764 274.315 953.458 262.158C953.458 262.148 953.457 262.137 953.458 262.127C953.556 260.399 953.636 258.651 953.708 256.908C953.708 256.898 953.707 256.887 953.708 256.877C953.85 253.38 953.954 249.87 953.989 246.315C953.989 246.305 953.989 246.294 953.989 246.284C954.006 244.501 953.999 242.706 953.989 240.909C953.989 240.273 953.967 239.638 953.958 239.003C953.968 238.368 953.989 237.732 953.989 237.097C953.999 235.3 954.006 233.505 953.989 231.722C953.989 231.711 953.989 231.701 953.989 231.69C953.955 228.135 953.85 224.625 953.708 221.128C953.707 221.118 953.708 221.107 953.708 221.097C953.637 219.354 953.556 217.606 953.458 215.878C953.457 215.868 953.458 215.857 953.458 215.847C952.764 203.69 951.376 191.947 949.301 180.628V180.597C949.006 178.989 948.719 177.374 948.395 175.784V175.753C947.42 170.965 946.29 166.27 945.051 161.659C945.048 161.649 945.054 161.638 945.051 161.628C944.64 160.098 944.211 158.575 943.77 157.066C943.767 157.056 943.773 157.044 943.77 157.034C943.33 155.525 942.865 154.023 942.395 152.534C942.392 152.525 942.398 152.512 942.395 152.503C941.925 151.015 941.427 149.533 940.927 148.066C940.426 146.599 939.894 145.136 939.364 143.691C939.361 143.682 939.367 143.668 939.364 143.659C938.834 142.214 938.299 140.77 937.739 139.347C937.735 139.338 937.743 139.325 937.739 139.316C936.615 136.461 935.423 133.672 934.177 130.91C934.173 130.902 934.181 130.887 934.177 130.878C933.555 129.502 932.891 128.138 932.239 126.785C932.235 126.777 932.243 126.761 932.239 126.753C931.587 125.4 930.922 124.051 930.239 122.722C930.235 122.714 930.243 122.699 930.239 122.691C928.181 118.687 925.955 114.813 923.614 111.035C923.609 111.028 923.619 111.012 923.614 111.004C922.837 109.749 922.017 108.514 921.208 107.285C921.203 107.278 921.213 107.261 921.208 107.254C918.771 103.554 916.184 99.9932 913.458 96.5348C913.453 96.5288 913.463 96.5095 913.458 96.5036C912.553 95.3551 911.615 94.2183 910.677 93.0974C910.672 93.0914 910.682 93.0721 910.677 93.0662C909.739 91.9453 908.772 90.8466 907.802 89.7537C907.797 89.7477 907.807 89.7284 907.802 89.7225C903.904 85.3336 899.731 81.1732 895.302 77.2535C889.759 72.3477 883.79 67.8423 877.396 63.7225C876.117 62.8985 874.834 62.0763 873.521 61.285C870.894 59.7025 868.194 58.1713 865.427 56.7225C864.044 55.9981 862.627 55.2878 861.209 54.5975C858.372 53.2169 855.468 51.9014 852.49 50.66C851.001 50.0393 849.484 49.464 847.959 48.8788C843.384 47.123 838.67 45.5263 833.772 44.0976C832.139 43.6213 830.472 43.1616 828.803 42.7226C822.125 40.9665 815.165 39.4901 807.897 38.3476C804.263 37.7763 800.556 37.2914 796.772 36.8788C787.313 35.8462 777.401 35.315 766.991 35.315C759.971 35.315 753.339 35.2409 746.991 35.315C743.817 35.3522 740.736 35.4251 737.679 35.565C736.15 35.6349 734.622 35.7089 733.116 35.815C730.105 36.0274 727.125 36.3219 724.179 36.7213C719.023 37.4197 713.935 38.4638 708.835 39.9713C707.378 40.402 705.922 40.8649 704.46 41.3774C701.527 42.4054 698.595 43.6029 695.616 45.0024C694.874 45.3511 694.144 45.7223 693.397 46.0963L583.457 46.3463L571.301 15.0342C570.945 14.2042 570.458 13.4509 569.833 12.7531C569.823 12.7426 569.812 12.7325 569.802 12.7219C568.555 11.3408 566.842 10.2029 565.02 9.40936C564.409 9.14342 563.774 8.91492 563.145 8.72186C562.841 8.62856 562.513 8.54746 562.208 8.47186C561.894 8.39416 561.581 8.31161 561.27 8.25311C560.338 8.07721 559.431 7.99811 558.583 8.00311L558.583 8Z" fill="black" fill-opacity="0.99608" stroke="#191919" stroke-width="14"/>\n    <path d="M558.583 8.00004C557.074 8.00904 553.862 8.30615 552.114 8.93754L548.614 10.4375L557.271 46.2815L432.46 46.5628C354.497 46.7282 265.94 35.0588 199.53 37.0628C133.118 39.0665 47.4105 65.0628 47.4105 65.0628L33.7235 68.844C14.4725 74.1403 8.00549 166.211 8.00549 235.624C8.00549 236.737 8.03214 237.877 8.03674 238.999C8.03214 240.121 8.00549 241.261 8.00549 242.374C8.00549 311.788 14.4728 403.854 33.7235 409.154L47.4105 412.935C47.4105 412.935 133.121 438.931 199.53 440.935C265.942 442.939 354.5 431.27 432.46 431.435L557.271 431.716L548.614 467.56L552.114 469.06C553.862 469.692 557.074 469.989 558.583 469.998C559.432 470.003 560.338 469.924 561.271 469.748C561.581 469.69 561.894 469.607 562.208 469.529C562.513 469.454 562.841 469.372 563.145 469.279C563.774 469.087 564.409 468.857 565.02 468.592C566.842 467.8 568.555 466.689 569.802 465.31C569.812 465.3 569.823 465.29 569.833 465.279C570.458 464.583 570.945 463.826 571.302 462.998L583.458 431.748L693.398 431.998C717.298 443.94 738.909 442.717 766.991 442.717C900.241 442.717 954.621 356.131 953.991 241.337C953.991 240.557 953.972 239.771 953.96 238.993C953.972 238.215 953.991 237.43 953.991 236.65C954.619 121.86 900.242 35.2695 766.991 35.2695C738.909 35.2695 717.298 34.0459 693.398 45.9885L583.458 46.2385L571.302 14.9885C570.945 14.16 570.458 13.4038 569.833 12.7073C569.823 12.6969 569.812 12.6867 569.802 12.6761C568.555 11.2976 566.842 10.1869 565.02 9.39488C564.409 9.12944 563.774 8.90007 563.145 8.70738C562.841 8.61428 562.513 8.53278 562.208 8.45738C561.894 8.37978 561.581 8.29703 561.271 8.23863C560.338 8.06303 559.432 7.98363 558.583 7.98863V8.00004Z" fill="${a}" fill-opacity="0.99608"/>\n    <path opacity="0.9" d="M348.403 369.55C315.039 369.55 283.096 371.35 253.592 374.613C279.252 423.327 351.577 404.878 459.152 406.144C508.838 406.728 548.695 408.023 580.682 408.519C533.522 385.185 447.152 369.55 348.402 369.55L348.403 369.55Z" fill="#262626" fill-opacity="0.99608"/>\n    <path opacity="0.5" d="M348.403 369.55C345.197 369.55 342.02 369.58 338.841 369.613C339.659 385.784 345.269 399.87 353.435 408.457C358.106 408.381 362.93 408.26 367.872 408.113C359.306 399.921 353.279 385.885 352.153 369.551C350.901 369.546 349.658 369.551 348.403 369.551L348.403 369.55Z" fill="black" fill-opacity="0.99608"/>\n    <path d="M937.083 341.81L931.989 342.404C910.444 344.917 894.301 368.383 892.708 396.935L892.333 404.06L897.583 399.216C913.472 384.536 925.886 366.709 934.989 346.466L937.079 341.816L937.083 341.81Z" fill="#212121" stroke="#191919" stroke-width="5"/>\n    <path opacity="0.5" d="M731.533 352.81C731.533 352.81 811.21 330.214 836.913 320.828C863.752 311.026 935.772 281.682 935.772 281.682C935.772 281.682 927.031 324.152 905.289 339.6C828.059 394.47 672.599 393.45 672.599 393.45" stroke="#292929" stroke-width="6" stroke-linecap="round" stroke-linejoin="round"/>\n    <path d="M818.033 332.15L813.596 334.494C814.585 335.651 815.391 336.922 815.971 338.338C820.769 350.055 805.235 367.574 789.096 374.119C788.579 374.328 787.283 374.959 785.689 375.775L799.314 371.9C816.62 363.442 826.784 348.818 822.314 337.9C821.398 335.662 819.939 333.734 818.033 332.15L818.033 332.15Z" fill="url(#paint0_linear_3_37)"/>\n    <path d="M826.613 327.69L822.175 330.034C823.165 331.191 823.971 332.462 824.55 333.878C829.348 345.595 813.814 363.114 797.675 369.659C797.159 369.868 795.863 370.499 794.269 371.315L807.894 367.44C825.2 358.982 835.364 344.358 830.894 333.44C829.978 331.203 828.519 329.274 826.613 327.69L826.613 327.69Z" fill="url(#paint1_linear_3_37)"/>\n    <path d="M832.803 326.27L828.366 328.614C829.355 329.771 830.161 331.042 830.741 332.458C835.539 344.175 820.005 361.694 803.866 368.239C803.349 368.448 802.053 369.079 800.459 369.895L814.084 366.02C831.39 357.562 841.554 342.938 837.084 332.02C836.168 329.782 834.709 327.854 832.803 326.27L832.803 326.27Z" fill="url(#paint2_linear_3_37)"/>\n    <path d="M849.713 322L843.526 323.844C844.486 325.557 845.18 327.376 845.557 329.313C848.676 345.347 824.595 363.597 802.526 367.813C799.131 368.461 773.642 376.389 770.368 376.617V380.742L811.807 368.594C838.092 363.098 856.756 346.146 853.682 330.344C853.086 327.282 851.726 324.484 849.713 322L849.713 322Z" fill="url(#paint3_linear_3_37)"/>\n    <path d="M849.713 322L843.526 323.844C844.486 325.557 845.18 327.376 845.557 329.313C848.676 345.347 824.595 363.597 802.526 367.813C799.131 368.461 773.642 376.389 770.368 376.617V380.742L811.807 368.594C838.092 363.098 856.756 346.146 853.682 330.344C853.086 327.282 851.726 324.484 849.713 322L849.713 322Z" fill="url(#paint4_linear_3_37)"/>\n    <path d="M805.183 336.77L801.219 338.864C802.102 339.897 802.823 341.033 803.341 342.297C807.627 352.764 793.75 368.414 779.332 374.261C778.871 374.449 777.713 375.012 776.29 375.741L788.461 372.279C803.921 364.724 813.001 351.659 809.007 341.906C808.188 339.908 806.885 338.185 805.182 336.77L805.183 336.77Z" fill="url(#paint5_linear_3_37)"/>\n    <path d="M791.383 340.34L787.419 342.434C788.303 343.467 789.023 344.603 789.541 345.867C793.827 356.334 779.95 371.984 765.533 377.831C765.071 378.019 763.913 378.582 762.49 379.311L774.661 375.849C790.121 368.294 799.201 355.229 795.207 345.476C794.388 343.478 793.085 341.755 791.382 340.34L791.383 340.34Z" fill="url(#paint6_linear_3_37)"/>\n    <path d="M181.333 360.03C189.626 358.007 196.819 358.551 201.13 365.817L198.637 383.714C191.761 389.887 184.887 388.665 178.012 383.87L181.333 360.031L181.333 360.03Z" fill="url(#paint7_linear_3_37)"/>\n    <path d="M201.603 363.3C209.753 362.09 216.77 362.727 220.446 368.808L218.073 385.842C211.589 388.817 205.09 391.052 198.442 385.99L201.603 363.3V363.3Z" fill="url(#paint8_linear_3_37)"/>\n    <path opacity="0.9" d="M348.403 367.06C314.949 367.06 282.911 368.849 253.31 372.123L249.654 372.529L251.373 375.779C258.044 388.443 267.935 396.892 280.435 402.217C292.936 407.541 308.007 409.829 325.528 410.654C360.57 412.304 405.482 408.023 459.118 408.654C508.777 409.239 548.625 410.533 580.647 411.029L581.772 406.279C533.932 382.599 447.433 367.059 348.413 367.059L348.403 367.06ZM348.403 372.06C439.572 372.06 520.153 385.539 568.493 405.779C538.541 405.197 503.281 404.173 459.183 403.654C405.246 403.019 360.207 407.306 325.783 405.685C308.569 404.875 294.016 402.58 282.377 397.623C271.924 393.171 263.892 386.469 257.877 376.717C286.184 373.734 316.612 372.061 348.407 372.061L348.403 372.06Z" fill="#191919"/>\n    <path opacity="0.9" d="M208.563 121.69L130.814 134.159C103.664 138.513 81.867 182.932 79.815 238.999C81.8673 295.07 103.664 339.489 130.814 343.839L208.563 356.308C221.859 356.308 232.563 345.604 232.563 332.308V145.688C232.563 132.392 221.859 121.688 208.563 121.688V121.69Z" fill="#262626" fill-opacity="0.99608" stroke="#191919" stroke-width="5"/>\n    <path opacity="0.9" d="M640.023 87.47C637.054 87.47 634.13 87.8021 631.242 88.4387C631.231 88.4287 631.221 88.4177 631.211 88.4075L567.368 100.72C549.64 107.324 535.368 114.992 535.368 132.72V345.28C535.368 363.008 549.64 370.675 567.368 377.28L631.211 389.592C631.221 389.581 631.231 389.57 631.242 389.56C634.13 390.197 637.054 390.529 640.023 390.529C685.418 390.529 722.221 333.166 722.335 238.999C722.221 144.83 685.419 87.4691 640.023 87.4691V87.47Z" fill="#262626" fill-opacity="0.99608" stroke="#191919" stroke-width="5"/>\n    <path opacity="0.9" d="M348.403 108.46C315.039 108.46 283.096 106.66 253.592 103.398C279.252 54.6835 351.577 73.1325 459.152 71.8665C508.838 71.2818 548.695 69.9872 580.682 69.4915C533.522 92.8255 447.152 108.461 348.402 108.461L348.403 108.46Z" fill="#262626" fill-opacity="0.99608"/>\n    <path opacity="0.5" d="M348.403 108.46C345.197 108.46 342.02 108.431 338.841 108.398C339.659 92.2266 345.269 78.1406 353.435 69.5536C358.106 69.6292 362.93 69.7501 367.872 69.8973C359.306 78.0896 353.279 92.1253 352.153 108.459C350.901 108.464 349.658 108.459 348.403 108.459L348.403 108.46Z" fill="black" fill-opacity="0.99608"/>\n    <path d="M937.083 136.2L931.989 135.606C910.444 133.094 894.301 109.627 892.708 81.0753L892.333 73.9503L897.583 78.7941C913.472 93.4741 925.886 111.301 934.989 131.544L937.083 136.2L937.083 136.2Z" fill="#212121" stroke="#191919" stroke-width="5"/>\n    <path opacity="0.5" d="M731.533 125.2C731.533 125.2 811.21 147.796 836.913 157.182C863.752 166.984 935.772 196.328 935.772 196.328C935.772 196.328 927.031 153.858 905.289 138.41C828.059 83.54 672.599 84.55 672.599 84.55" stroke="#292929" stroke-width="6" stroke-linecap="round" stroke-linejoin="round"/>\n    <path d="M818.033 145.86L813.596 143.516C814.585 142.359 815.391 141.088 815.971 139.672C820.769 127.955 805.235 110.436 789.096 103.891C788.579 103.682 787.283 103.051 785.689 102.235L799.314 106.11C816.62 114.568 826.784 129.192 822.314 140.11C821.398 142.348 819.939 144.276 818.033 145.86L818.033 145.86Z" fill="url(#paint9_linear_3_37)"/>\n    <path d="M826.613 150.32L822.175 147.976C823.165 146.819 823.971 145.548 824.55 144.132C829.348 132.415 813.814 114.896 797.675 108.351C797.159 108.142 795.863 107.511 794.269 106.695L807.894 110.57C825.2 119.028 835.364 133.652 830.894 144.57C829.978 146.807 828.519 148.736 826.613 150.32L826.613 150.32Z" fill="url(#paint10_linear_3_37)"/>\n    <path d="M832.803 151.73L828.366 149.386C829.355 148.229 830.161 146.958 830.741 145.542C835.539 133.825 820.005 116.306 803.866 109.761C803.349 109.552 802.053 108.921 800.459 108.105L814.084 111.98C831.39 120.438 841.554 135.062 837.084 145.98C836.168 148.218 834.709 150.146 832.803 151.73L832.803 151.73Z" fill="url(#paint11_linear_3_37)"/>\n    <path d="M849.713 156.01L843.526 154.166C844.486 152.453 845.18 150.634 845.557 148.697C848.676 132.663 824.595 114.413 802.526 110.197C799.131 109.549 773.642 101.621 770.368 101.393V97.2681L811.807 109.416C838.092 114.912 856.756 131.864 853.682 147.666C853.086 150.728 851.726 153.526 849.713 156.01L849.713 156.01Z" fill="url(#paint12_linear_3_37)"/>\n    <path d="M849.713 156.01L843.526 154.166C844.486 152.453 845.18 150.634 845.557 148.697C848.676 132.663 824.595 114.413 802.526 110.197C799.131 109.549 773.642 101.621 770.368 101.393V97.2681L811.807 109.416C838.092 114.912 856.756 131.864 853.682 147.666C853.086 150.728 851.726 153.526 849.713 156.01L849.713 156.01Z" fill="url(#paint13_linear_3_37)"/>\n    <path d="M805.183 141.24L801.219 139.146C802.102 138.113 802.823 136.977 803.341 135.713C807.627 125.246 793.75 109.596 779.332 103.749C778.871 103.561 777.713 102.998 776.29 102.269L788.461 105.731C803.921 113.286 813.001 126.351 809.007 136.104C808.188 138.102 806.885 139.825 805.182 141.24L805.183 141.24Z" fill="url(#paint14_linear_3_37)"/>\n    <path d="M791.383 137.67L787.419 135.576C788.303 134.543 789.023 133.407 789.541 132.143C793.827 121.676 779.95 106.026 765.533 100.179C765.071 99.9914 763.913 99.4276 762.49 98.699L774.661 102.161C790.121 109.716 799.201 122.781 795.207 132.534C794.388 134.532 793.085 136.255 791.382 137.67L791.383 137.67Z" fill="url(#paint15_linear_3_37)"/>\n    <path d="M181.333 117.97C189.626 119.993 196.819 119.449 201.13 112.183L198.637 94.2859C191.761 88.1127 184.887 89.3349 178.012 94.1304L181.333 117.969L181.333 117.97Z" fill="url(#paint16_linear_3_37)"/>\n    <path d="M201.603 114.71C209.753 115.92 216.77 115.283 220.446 109.202L218.073 92.1679C211.589 89.1931 205.09 86.9583 198.442 92.02L201.603 114.71V114.71Z" fill="url(#paint17_linear_3_37)"/>\n    <path opacity="0.9" d="M348.403 110.95C314.949 110.95 282.911 109.161 253.31 105.888L249.654 105.481L251.373 102.231C258.044 89.5673 267.935 81.1183 280.435 75.7933C292.936 70.4692 308.007 68.1807 325.528 67.3558C360.57 65.706 405.482 69.987 459.118 69.3558C508.777 68.7715 548.625 67.4771 580.647 66.9808L581.772 71.7308C533.923 95.4058 447.413 110.95 348.403 110.95L348.403 110.95ZM348.403 105.95C439.572 105.95 520.153 92.4711 568.493 72.2311C538.541 72.8135 503.281 73.8371 459.183 74.3561C405.246 74.9908 360.207 70.7038 325.783 72.3248C308.569 73.1353 294.016 75.4302 282.377 80.3873C271.924 84.8394 263.892 91.5413 257.877 101.293C286.184 104.276 316.612 105.95 348.407 105.95L348.403 105.95Z" fill="#191919"/>\n    <defs>\n    <linearGradient id="paint0_linear_3_37" x1="827.702" y1="353.958" x2="804.532" y2="346.338" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint1_linear_3_37" x1="857.401" y1="340.58" x2="845.641" y2="340.64" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint2_linear_3_37" x1="855.588" y1="348.3" x2="791.508" y2="342.71" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint3_linear_3_37" x1="866.721" y1="354.62" x2="853.261" y2="347.59" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint4_linear_3_37" x1="850.211" y1="364.27" x2="805.491" y2="313.3" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint5_linear_3_37" x1="835.398" y1="347.875" x2="761.601" y2="348.991" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint6_linear_3_37" x1="814.444" y1="359.62" x2="753.913" y2="356.046" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint7_linear_3_37" x1="201.13" y1="376.905" x2="178.004" y2="368.171" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint8_linear_3_37" x1="220.444" y1="379.368" x2="198.444" y2="375.889" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint9_linear_3_37" x1="827.702" y1="124.01" x2="804.532" y2="131.63" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint10_linear_3_37" x1="857.401" y1="137.45" x2="845.641" y2="137.39" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint11_linear_3_37" x1="855.588" y1="129.71" x2="791.508" y2="135.3" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint12_linear_3_37" x1="866.721" y1="123.41" x2="853.261" y2="130.44" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint13_linear_3_37" x1="850.211" y1="113.76" x2="805.491" y2="164.73" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint14_linear_3_37" x1="835.398" y1="130.115" x2="761.601" y2="128.999" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint15_linear_3_37" x1="814.444" y1="118.351" x2="753.913" y2="121.924" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint16_linear_3_37" x1="201.13" y1="101.13" x2="178.004" y2="109.864" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    <linearGradient id="paint17_linear_3_37" x1="220.444" y1="98.649" x2="198.444" y2="102.128" gradientUnits="userSpaceOnUse">\n    <stop stop-color="#1A1A1A"/>\n    <stop offset="1" stop-opacity="0"/>\n    </linearGradient>\n    </defs>\n    </svg>    \n    `}render(){return this.node.innerHTML}}var b=function(t,e,n,a){return new(n||(n=Promise))((function(i,s){function r(t){try{o(a.next(t))}catch(t){s(t)}}function C(t){try{o(a.throw(t))}catch(t){s(t)}}function o(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,C)}o((a=a.apply(t,e||[])).next())}))};class v extends t{constructor(t=null,e="div",n=[],a){super(t,e,n),this.renderGarageTable=()=>{},this.setUpdateInputsInGarage=()=>{},this.setListenerForUpdateBtnInGarage=()=>{},"number"!=typeof a.id&&(console.error(`invalid car id fo create garage table row: ${a.id}`),a.id=1/0),this.carData=a,this.node.innerHTML=`\n      <div class="car__btns-wrap car-btns">\n        <div class="car-btns__cahnge-column-wrap">\n          <button class="car__btn car__btn_edit common-btn">edit</button>\n          <button class="car__btn car__btn_remove common-btn">remove</button>\n        </div>\n        <div class="car-btns__action-column-wrap">\n          <button class="car__btn car__btn_go common-btn">go</button>\n          <button class="car__btn car__btn_reset common-btn" disabled>reset</button>\n        </div>\n      </div>\n      <div class="car__image-contain">${this.drawCarImage(a.color)}</div>\n      <span class="car__finishline"></span>\n      <span class="car__name">${a.name}</span>\n    `,this.editBtn=this.node.querySelector(".car__btn_edit"),this.removeBtn=this.node.querySelector(".car__btn_remove"),this.goBtn=this.node.querySelector(".car__btn_go"),this.resetBtn=this.node.querySelector(".car__btn_reset"),this.carIconSvg=this.node.querySelector(".car__image-contain"),this.finishLine=this.node.querySelector(".car__finishline"),this.nameSpan=this.node.querySelector(".car__name"),this.nameSpan.style.color=a.color,this.initListeners(a)}drawCarImage(t){return new f(null,"div",["car__image"],t).render()}initListeners(t){this.removeBtn.addEventListener("click",(()=>{t.id?this.onRemoveBtnListener(t.id):console.error(`invalid car data: carData.id = ${t.id}`)})),this.editBtn.addEventListener("click",(()=>{this.onEditBtnListener(t)})),this.goBtn.addEventListener("click",(()=>{this.carData.id?this.onGoBtnListener(this.carData):console.error(`invalid car data: carData.id = ${t.id}`)})),this.resetBtn.addEventListener("click",(()=>{t.id?this.onResetBtnListener(t.id):console.error(`invalid car data: carData.id = ${t.id}`)}))}onRemoveBtnListener(t){return b(this,void 0,void 0,(function*(){(g.state.countCars-1)%g.state.limitPageCarsList==0&&(g.state.carsCurrentPage=g.state.carsCurrentPage>1?--g.state.carsCurrentPage:1),(g.state.countWinners-1)%g.state.limitPageWinnersList==0&&(g.state.winnersCurrentPage=g.state.winnersCurrentPage>1?--g.state.winnersCurrentPage:1),yield g.deleteCar(t),g.state.winners.some((e=>e.id===t))&&(yield g.deleteWinner(t)),yield this.renderGarageTable()}))}onEditBtnListener(t){return b(this,void 0,void 0,(function*(){t.id?(this.setUpdateInputsInGarage(t),this.setListenerForUpdateBtnInGarage(t.id)):console.error(`invalid car id for edit car: ${t.id}`)}))}setBtnsIntoRaceStatus(){this.editBtn.disabled=!0,this.removeBtn.disabled=!0,this.goBtn.disabled=!0,this.resetBtn.disabled=!1}setBtnsIntoDefaultStatus(){this.editBtn.disabled=!1,this.removeBtn.disabled=!1,this.goBtn.disabled=!1,this.resetBtn.disabled=!0}onGoBtnListener(t,e){return b(this,void 0,void 0,(function*(){if(!t.id)return;this.setBtnsIntoRaceStatus();const n=this.carIconSvg,a=this.finishLine;let i;try{const e=yield g.setStatusForCarsEngine(t.id,d.started);i=e.distance/e.velocity}catch(t){return void console.error(t)}const s=n.getBoundingClientRect().width/2,C=Math.floor(function(t,e){const n=r(t),a=r(e);return Math.hypot(n.x-a.x,n.y-a.y)}(n,a)+s);g.state.animatedCarsData[t.id]=function(t,e,n){let a=performance.now();const i={AnimationFrameId:window.requestAnimationFrame((function s(r){let C=(r-a)/n;C>1&&(C=1);const o=C*e;i.progress=o,t.style.transform=`translate(${o}px)`,C<1?i.AnimationFrameId=window.requestAnimationFrame(s):i.ended=!0})),progress:0,ended:!1,stopped:!1};return i}(n,C,i);try{const n=yield g.setStatusForCarsEngine(t.id,d.drive);if(e){const e=g.state.animatedCarsData[t.id].progress>=C;!g.state.isWinnerAlreadyChosen&&!g.state.canceledRase&&n.success&&e&&(yield this.chooseWinnerOfRace(i,t))}}catch(t){}finally{if(g.state.animatedCarsData[t.id]){const e=g.state.animatedCarsData[t.id].AnimationFrameId;cancelAnimationFrame(e),delete g.state.animatedCarsData[t.id]}yield g.setStatusForCarsEngine(t.id,d.stopped)}}))}chooseWinnerOfRace(t,e){return b(this,void 0,void 0,(function*(){const n=+(t/1e3).toFixed(2);g.state.isWinnerAlreadyChosen=!0;const a=`${e.name} wins <br> Time: ${n}s`;if(this.showWinnerPopup(a),g.state.winners.some((t=>t.id===e.id))){const t=g.state.winners.find((t=>t.id===e.id));++t.wins,t.time=n<t.time?n:t.time,yield g.updateWinner(t)}else{const t={id:e.id,wins:1,time:n};yield g.createWinner(t)}}))}showWinnerPopup(t){new L(this.node,"div",["popup","winner-popup","active"],t)}onResetBtnListener(t){return b(this,void 0,void 0,(function*(){g.state.animatedCarsData[t]&&cancelAnimationFrame(g.state.animatedCarsData[t].AnimationFrameId),this.carIconSvg.style.transform="translate(0px)",yield g.setStatusForCarsEngine(t,d.stopped),this.setBtnsIntoDefaultStatus()}))}render(){return this.node}}class y extends t{constructor(t,e="div",n=[]){super(t,e,n),this.renderGarageTable=()=>{},this.setUpdateInputsInGarage=()=>{},this.setListenerForUpdateBtnInGarage=()=>{},this.renderGarageTable(g.state.cars)}renderRowsCarsTable(t){this.node.innerHTML="",this.rowsInstancesArr=t.map((t=>{const e=new v(this.node,"div",["table-body__row","car"],t);return e.renderGarageTable=this.renderGarageTable,e.setUpdateInputsInGarage=this.setUpdateInputsInGarage,e.setListenerForUpdateBtnInGarage=this.setListenerForUpdateBtnInGarage,e}))}render(){return this.renderRowsCarsTable(g.state.cars),this.node}}var w=function(t,e,n,a){return new(n||(n=Promise))((function(i,s){function r(t){try{o(a.next(t))}catch(t){s(t)}}function C(t){try{o(a.throw(t))}catch(t){s(t)}}function o(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,C)}o((a=a.apply(t,e||[])).next())}))};class m extends t{constructor(t,e="div",n=[]){super(t,e,n),this.pullRowsInstancesArrFromGarageTableToGarageSettings=()=>{},this.garageTableHeader=new _(this.node,"div",["garage-table__head-wrap","table-head"]),this.garageTableBody=new y(this.node,"div",["garage-table__body-wrap","table-body"]),this.initListeners(),this.passFunctionToComponents()}initListeners(){this.garageTableHeader.nextPageBtn.addEventListener("click",this.onChangeTablePageListener.bind(this)),this.garageTableHeader.prevPageBtn.addEventListener("click",this.onChangeTablePageListener.bind(this))}passFunctionToComponents(){this.garageTableBody.renderGarageTable=this.render.bind(this)}onChangeTablePageListener(t){return w(this,void 0,void 0,(function*(){const e=t.currentTarget;if(e.classList.contains("table-head__navigation_prev"))--g.state.carsCurrentPage;else{if(!e.classList.contains("table-head__navigation_next"))return void console.error(`invalid element for change garage table page: ${e}`);++g.state.carsCurrentPage}yield g.fetchCarsListToState(),this.render()}))}render(){return w(this,void 0,void 0,(function*(){return this.garageTableHeader.render(),this.garageTableBody.render(),this.pullRowsInstancesArrFromGarageTableToGarageSettings(),this.node}))}}var S=function(t,e,n,a){return new(n||(n=Promise))((function(i,s){function r(t){try{o(a.next(t))}catch(t){s(t)}}function C(t){try{o(a.throw(t))}catch(t){s(t)}}function o(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,C)}o((a=a.apply(t,e||[])).next())}))};class M extends t{constructor(t,e="div",n=[]){super(t,e,n),this.renderGarageTable=()=>{},this.node.innerHTML='\n      <div class="garage-settings__create-wrap create-car">\n        <span class="create-car__label">Create car :</span>\n        <div class="create-car__settings-wrap create-settings">\n          <span class="create-settings__name-label">name</span>\n          <input class="create-settings__name-input" type="text" id="create-input">\n          <span class="create-settings__color-label">color</span>\n          <input class="create-settings__color-input" type="color" name="color" id="create-color" value="#000000">\n          <button class="create-settings__create-btn common-btn">create</button>\n        </div>\n      </div>\n\n      <div class="garage-settings__update-wrap update-car">\n        <div class="update-car__label">Update car :</div>\n        <div class="update-car__settings-wrap update-settings">\n          <span class="update-settings__name-label ">name</span>\n          <input class="update-settings__name-input" type="text" id="update-input" disabled>\n          <span class="update-settings__color-label">color</span>\n          <input class="update-settings__color-input" type="color" id="update-color" value="#c2c2c2" disabled>\n          <button class="update-settings__update-btn common-btn" disabled>update</button>\n        </div>\n      </div>\n\n      <div class="garage-settings__main-btns-wrap main-btns">\n        <button class="main-btns__race-btn common-btn">Race</button>\n        <button class="main-btns__reset-btn common-btn">Reset</button>\n        <button class="main-btns__generate-btn common-btn">Generate 100 cars</button>\n      </div>\n    ',this.createCarTextInput=this.node.querySelector("#create-input"),this.createCarColorInput=this.node.querySelector("#create-color"),this.createCarBtn=this.node.querySelector(".create-settings__create-btn"),this.updateCarTextInput=this.node.querySelector("#update-input"),this.updateCarColorInput=this.node.querySelector("#update-color"),this.updateCarBtn=this.node.querySelector(".update-settings__update-btn"),this.raceBtn=this.node.querySelector(".main-btns__race-btn"),this.resetRaceBtn=this.node.querySelector(".main-btns__reset-btn"),this.generateCarsBtn=this.node.querySelector(".main-btns__generate-btn"),this.initListeners()}initListeners(){this.generateCarsBtn.addEventListener("click",this.onGenerateCarsBtnListener.bind(this)),this.resetRaceBtn.addEventListener("click",this.onResetRaceBtnListener.bind(this)),this.raceBtn.addEventListener("click",this.onRaceBtnListener.bind(this))}onGenerateCarsBtnListener(){return S(this,void 0,void 0,(function*(){this.generateCarsBtn.disabled=!0,yield g.generateManyCars(),yield this.renderGarageTable(),this.generateCarsBtn.disabled=!1}))}setUpdateInputs(t){this.makeUpdateSettingsClickable(),this.updateCarTextInput.value=t.name,this.updateCarColorInput.value=t.color}setListenerForUpdateBtn(t){const e=this.updateCarBtnListener.bind(this);g.state.currentUpdateCarId&&(this.updateCarBtn.removeEventListener("click",e),g.state.currentUpdateCarId=null),g.state.currentUpdateCarId||(g.state.currentUpdateCarId=t,this.updateCarBtn.addEventListener("click",e,{once:!0}))}updateCarBtnListener(){return S(this,void 0,void 0,(function*(){const t={name:this.updateCarTextInput.value,color:this.updateCarColorInput.value},e=g.state.currentUpdateCarId;yield g.updateCar(t,e),yield this.renderGarageTable(),this.resetUpdateInputs(),this.makeUpdateSettingsDisable(),g.state.currentUpdateCarId=null}))}resetCreateInputs(){this.createCarTextInput.value="",this.createCarColorInput.value="#000000"}resetUpdateInputs(){this.updateCarTextInput.value="",this.updateCarColorInput.value="#c2c2c2"}makeUpdateSettingsClickable(){this.updateCarTextInput.disabled=!1,this.updateCarColorInput.disabled=!1,this.updateCarBtn.disabled=!1}onResetRaceBtnListener(){return S(this,void 0,void 0,(function*(){if(!this.rowsInstancesArrInGarageTable)return void console.error("rowsInstancesArrInGarageTable for reset not found");g.state.canceledRase=!0;const t=[];this.rowsInstancesArrInGarageTable.forEach((e=>t.push(e.onResetBtnListener(e.carData.id)))),yield Promise.allSettled(t),this.setSettingsIntoDefaultStates()}))}onRaceBtnListener(){return S(this,void 0,void 0,(function*(){if(!this.rowsInstancesArrInGarageTable)return void console.error("rowsInstancesArrInGarageTable for race not found");g.state.canceledRase=!1,g.state.isWinnerAlreadyChosen=!1,this.setSettingsIntoRaceStates();const t=[];this.rowsInstancesArrInGarageTable.forEach((e=>t.push(e.onGoBtnListener(e.carData,!0)))),yield Promise.allSettled(t)}))}makeUpdateSettingsDisable(){this.updateCarTextInput.disabled=!0,this.updateCarColorInput.disabled=!0,this.updateCarBtn.disabled=!0}setSettingsIntoRaceStates(){this.makeUpdateSettingsDisable(),this.createCarTextInput.disabled=!0,this.createCarColorInput.disabled=!0,this.createCarBtn.disabled=!0,this.raceBtn.disabled=!0,this.generateCarsBtn.disabled=!0,this.resetRaceBtn.disabled=!1}setSettingsIntoDefaultStates(){this.createCarTextInput.disabled=!1,this.createCarColorInput.disabled=!1,this.createCarBtn.disabled=!1,this.raceBtn.disabled=!1,this.generateCarsBtn.disabled=!1,this.resetRaceBtn.disabled=!1}}var T=function(t,e,n,a){return new(n||(n=Promise))((function(i,s){function r(t){try{o(a.next(t))}catch(t){s(t)}}function C(t){try{o(a.throw(t))}catch(t){s(t)}}function o(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,C)}o((a=a.apply(t,e||[])).next())}))};class x extends t{constructor(e,n="div",a=[],i){super(e,n,a),this.node.id=i,this.container=new t(this.node,"div",["garage__container","container"]),this.garageSettings=new M(this.container.node,"div",["garage__settings-wrap","garage-settings"]),this.garageTable=new m(this.container.node,"div",["garage__table","garage-table"]),this.initListeners(),this.passFunctionToComponents()}initListeners(){this.garageSettings.createCarBtn.addEventListener("click",this.onCreateCarListener.bind(this))}passFunctionToComponents(){this.garageSettings.renderGarageTable=this.garageTable.render.bind(this.garageTable),this.garageTable.garageTableBody.setUpdateInputsInGarage=this.garageSettings.setUpdateInputs.bind(this.garageSettings),this.garageTable.garageTableBody.setListenerForUpdateBtnInGarage=this.garageSettings.setListenerForUpdateBtn.bind(this.garageSettings),this.garageTable.pullRowsInstancesArrFromGarageTableToGarageSettings=this.pullRowsInstancesArrFromGarageTableToGarageSettings.bind(this)}pullRowsInstancesArrFromGarageTableToGarageSettings(){this.garageSettings.rowsInstancesArrInGarageTable=this.garageTable.garageTableBody.rowsInstancesArr}onCreateCarListener(){return T(this,void 0,void 0,(function*(){if(""===this.garageSettings.createCarTextInput.value.trim())return;const t={name:this.garageSettings.createCarTextInput.value,color:this.garageSettings.createCarColorInput.value};this.garageSettings.resetCreateInputs(),yield g.createCar(t),yield this.garageTable.render()}))}render(){return T(this,void 0,void 0,(function*(){return yield g.fetchCarsListToState(),this.garageTable.render(),this.passFunctionToComponents(),this.node}))}}class I extends t{constructor(t,e="div",n=[]){super(t,e,n),this.node.innerHTML='\n      <div class="table-head__information-wrap">\n        <div class="table-head__total-indicator-wrap">\n          <span class="table-head__total-indicator-label">Winners:</span>\n          <span class="table-head__total-indicator-value">unknown</span>\n        </div>\n        <div class="table-head__page-indicator-wrap">\n          <span class="table-head__page-indicator-label">Page #</span>\n          <span class="table-head__page-indicator-label">unknown</span>\n        </div>\n      </div>\n      <div class="table-head__navigation-wrap">\n        <button class="table-head__navigation table-head__navigation_prev common-btn">prev page</button>\n        <button class="table-head__navigation table-head__navigation_next common-btn">next page</button>\n      </div>\n      <div class="table-head__table-hat-wrap table-hat">\n        <div class="table-hat__id">ID</div>\n        <div class="table-hat__car">Car</div>\n        <div class="table-hat__name">Name</div>\n        <div class="table-hat__wins">Wins</div>\n        <div class="table-hat__best-time">Best time</div>\n      </div>\n    ',this.winnersTotalCount=this.node.querySelector(".table-head__total-indicator-value"),this.winnersCurrentPageIndicator=this.node.querySelector(".table-head__page-indicator-label"),this.prevPageBtn=this.node.querySelector(".table-head__navigation_prev"),this.nextPageBtn=this.node.querySelector(".table-head__navigation_next"),this.choiceSortId=this.node.querySelector(".table-hat__id"),this.choiceSortWins=this.node.querySelector(".table-hat__wins"),this.choiceSortTime=this.node.querySelector(".table-hat__best-time")}checkIfBtnNeedDisable(){const t=g.state.winnersCurrentPage,e=Math.ceil(g.state.countWinners/g.state.limitPageWinnersList);this.prevPageBtn.disabled=!1,this.nextPageBtn.disabled=!1,1===t&&(this.prevPageBtn.disabled=!0),e<=t&&(this.nextPageBtn.disabled=!0)}render(){return this.checkIfBtnNeedDisable(),this.winnersTotalCount.textContent=g.state.countWinners.toString(),this.winnersCurrentPageIndicator.textContent=g.state.winnersCurrentPage.toString(),this.node}}class Z extends t{constructor(t,e="span",n=["car__image"],a="#FFFF00"){super(t,e,n),this.node.innerHTML=`\n    <svg class="winner__car-image" width="1708" height="880" viewBox="0 0 1708 880" fill="none" xmlns="http://www.w3.org/2000/svg">\n    <path d="M487 0.799986C440.067 3.06665 405.133 5.73332 361.4 10.1333C352.067 11.2 351.533 12.6667 360.067 13.8667C368.867 15.2 380.867 21.4667 389 29.0667L396.467 35.7333L439.667 31.3333C543 20.6667 607.933 18.1333 695 21.3333C750.333 23.4667 803.4 27.6 851.267 33.3333C888.067 37.8667 889.133 36.2667 854.333 28.8C793.8 15.8667 743 9.19999 659.133 3.19999C633 1.33332 510.467 -0.400014 487 0.799986Z" fill="${a}"/>\n    <path d="M303 17.8666C253.133 28.6666 201.667 55.3333 155 94.5333C136.6 109.867 112.2 134.133 103.8 145.333C94.0666 158.4 86.4666 165.733 79 169.333C75.6666 170.933 62.3333 174.267 48.7333 176.8C20.4666 182 22.6 180.667 12.6 200.8C4.19998 217.467 1.93331 223.867 4.06664 224.667C4.99998 225.067 34.6 231.467 70.0666 239.067L134.333 252.8L136.2 250C137.267 248.4 142.067 239.067 147 229.2C154.2 214.8 157.8 209.467 165.133 201.733C170.067 196.4 175 190.4 176.067 188.4C177.133 186.4 179.667 176.533 181.667 166.667C188.733 131.733 200.467 93.6 209.133 77.2C216.867 62.6666 225.533 57.2 257 46.8C330.467 22.6666 359.8 28.9333 385 74.1333C387.933 79.3333 393.267 91.0666 396.867 100.133C407.267 126.533 431.8 199.6 434.2 211.467L436.333 222.267L449.667 222.533C457 222.667 465 223.067 467.4 223.467C469.667 224 471.667 223.733 471.667 223.067C471.667 222.4 466.067 207.467 459.267 189.867C452.333 172.4 441.533 144.133 435 127.333C415 74.8 398.467 42.5333 385.933 31.3333C373 19.6 362.2 16.1333 335.667 15.3333C320.067 14.6666 315.667 15.0666 303 17.8666ZM183.667 85.6C183.667 87.8666 165.4 144.133 160.867 156.267C158.6 161.867 156.067 167.067 155.133 167.867C153.933 168.933 147.8 168.8 133 167.333C121.8 166.133 112.067 164.933 111.267 164.4C109.133 163.067 111.267 151.333 115.133 143.067C121.133 130.4 143.533 109.2 170.333 90.9333C180.467 84 183.667 82.6666 183.667 85.6Z" fill="${a}"/>\n    <path d="M167.533 97.6C135.4 120 117.4 140 114.733 156.533C113.933 161.733 114.333 161.867 131 163.333C136.2 163.733 143.133 164.4 146.6 164.8C152.867 165.6 152.867 165.6 155 160.4C158.333 152.933 178.467 91.7333 177.933 91.2C177.667 90.9333 173 93.7333 167.533 97.6Z" fill="black" fill-opacity="0.5"/>\n    <path d="M567 24.9333C538.2 26 471.533 31.4666 423 36.8C395.4 39.7333 397.4 38.5333 403.667 48.6666C416.067 69.0666 423.267 85.4666 450.2 156C460.467 182.8 470.6 208.8 472.733 214L476.6 223.333L489.8 223.067C497 222.933 509.267 221.6 517 220C524.733 218.533 542.067 215.733 555.667 214C586.467 209.733 595.533 207.333 613.8 198.133L628.333 190.933L676.333 184.133C802.067 166.4 807.533 166 955.4 166C1075.93 166 1078.47 166 1075.4 163.467C1071.13 160 1008.2 115.2 985 99.0666C940.067 67.8666 898.067 43.7333 884.6 41.3333C860.333 36.9333 760.2 27.6 713.667 25.3333C689.933 24.1333 595.267 23.8666 567 24.9333Z" fill="black" fill-opacity="0.5"/>\n    <path d="M305 38C291.933 40.2667 282.467 42.8 259.933 50C227.133 60.5333 220.467 64.6667 212.467 79.2C204.2 94 192.867 131.467 184.333 172.267C181 188.133 180.867 189.333 183 192.4C187 198.667 198.733 201.333 231 203.467C243.533 204.267 244.2 204.133 242.2 202C240.333 200.133 236.333 199.6 220.867 198.8C201.133 197.733 197.267 196.8 193.8 191.733C189.267 185.333 191.8 164.133 201.533 126C210.867 89.3334 212.2 85.7333 221.133 73.8667C225.933 67.2 226.733 66.8 240.6 62.2667C271.133 52.4 301.533 47.2 323.667 48.4C343.667 49.3333 351 52.4 363 64.5333C375.8 77.4667 378.733 83.7334 397.933 137.333C401.933 148.667 408.333 167.333 411.933 178.667C425.267 220.8 425.667 221.733 428.2 222.133C434.2 223.067 432.333 214.4 415 162.8C397.933 112.133 394.467 102.8 386.333 85.4667C371.933 55.3333 358.6 42.4 337.133 37.8667C326.6 35.7333 318.333 35.7333 305 38Z" fill="${a}"/>\n    <path d="M293 53.4666C268.467 57.8666 238.6 65.7333 230.2 70.1333C225.533 72.5333 217.667 84.2666 214.333 94C210.733 104.4 200.467 145.467 197.667 160.667C196.333 167.2 195.4 176.133 195.4 180.4C195.4 193.067 196.6 193.733 224.467 195.333L238.067 196.133L236.6 190.933C234.867 184.267 237.4 171.333 241.933 164.267C250.467 151.067 271.4 144.667 310.333 143.067C340.2 141.867 359.533 145.333 370.6 153.867C375.933 157.867 377 158.133 377 155.467C377 154.533 379.4 146.133 382.333 136.933L387.8 120.133L382.867 107.067C372.333 78.6666 361.267 63.6 346.067 56.5333C338.2 53.0666 336.333 52.8 319 52.5333C308.733 52.2666 297 52.8 293 53.4666Z" fill="black" fill-opacity="0.5"/>\n    <path d="M384.6 142.533C381.8 151.467 379.4 162.4 379.133 166.933C378.867 171.733 377.267 178.8 375.4 183.333C370.733 195.067 370.067 195.2 326.333 194.133C306.867 193.733 280.2 192.4 267 191.333C253.8 190.267 242.333 189.333 241.4 189.333C238.867 189.333 240.867 193.867 246.067 199.733L251 205.333L311.667 211.2C404.6 220.4 419.667 221.733 420.333 221.067C421.533 220 398.067 146.267 392.067 132.133L389.533 126.267L384.6 142.533Z" fill="${a}"/>\n    <path d="M1041.13 135.067C1046.6 138.933 1053.93 144.133 1057.53 146.533L1064.07 151.067L1063.27 144.667C1062.47 136.8 1061 135.6 1047.27 131.333C1031.13 126.133 1029.8 126.933 1041.13 135.067Z" fill="${a}"/>\n    <path d="M91.2666 144C80.1999 145.867 52.7333 154.8 44.5999 159.067C36.9999 163.067 28.9999 170.933 28.9999 174.267C28.9999 176.533 27.9333 176.533 50.3333 172.533C70.7333 168.933 76.0666 167.2 83.9333 161.867C89.5333 158 102.067 142.533 99.3999 142.8C98.4666 142.933 94.7333 143.467 91.2666 144Z" fill="${a}"/>\n    <path d="M290.333 148C258.6 152 244.6 160.133 240.867 176.533C239.933 180.667 239.533 184.267 239.8 184.533C243.133 187.733 355.933 192.533 365.933 189.867C368.067 189.333 369.8 186.667 372.333 180.133C377.533 166.267 376.867 162.8 367.267 156.133C357.267 149.333 349.533 147.733 323 147.333C309.8 147.067 295.133 147.333 290.333 148Z" fill="${a}"/>\n    <path d="M889.667 168.933C840.333 169.6 798.733 172.4 746.333 178.667C720.867 181.6 647.267 192 646.6 192.667C646.333 192.933 649 193.467 652.6 193.867C791.667 212 850.2 222.133 932.333 242.8C1045.93 271.333 1129.13 302.533 1231.27 354.933L1262.2 370.8L1273.93 366.133C1296.6 357.067 1330.47 348.667 1384.47 338.8C1440.6 328.4 1488.87 321.467 1529.4 318C1555.67 315.733 1613.4 315.333 1621.67 317.2C1624.6 318 1627.13 318.267 1627.4 318C1629.13 316.267 1587.27 292.4 1548.33 272.933C1518.6 258 1502.6 251.6 1463.67 238.933C1420.2 224.667 1396.6 218.267 1347.67 207.467C1288.33 194.267 1265.53 189.867 1242.33 187.333C1231.67 186 1200.2 182.133 1172.33 178.4C1124.33 172.133 1119.27 171.733 1077.67 170.667C1030.07 169.467 924.067 168.533 889.667 168.933ZM1422.33 228C1439.53 233.2 1456.47 238.8 1459.93 240.267C1466.2 242.933 1467.93 245.467 1464.73 247.6C1463.8 248.133 1447.13 248.4 1427.67 248.267C1392.73 247.867 1358.2 249.6 1313 254.133C1269.27 258.4 1220.87 264.133 1202.33 267.333C1149.93 276.4 1148.2 276.667 1133.8 274.933C1117.93 273.2 1081.27 264 1055 255.333C1036.6 249.2 1033 247.6 1034.73 245.867C1035.93 244.667 1099 234.267 1130.33 230.133C1201.13 220.667 1257.4 217.467 1336.33 218L1391 218.4L1422.33 228Z" fill="${a}"/>\n    <path d="M1284.33 221.467C1266.07 222 1242.6 223.067 1232.33 223.867C1187.4 227.333 1161 229.867 1161.93 230.667C1162.6 231.2 1164.87 232.267 1167 233.067C1169.27 233.733 1185.67 239.867 1203.67 246.533L1236.33 258.667L1271 254.667C1310.2 250.267 1345.4 247.2 1371.4 245.867C1381.13 245.333 1388.6 244.533 1388.07 244C1386.73 242.933 1319.27 219.867 1318.33 220.133C1317.93 220.267 1302.73 220.933 1284.33 221.467Z" fill="${a}"/>\n    <path d="M1369.67 232.4L1403 243.6L1431.4 244.533C1446.87 244.933 1459.67 245.067 1459.67 244.667C1459.67 243.467 1454.2 241.733 1421.67 231.733L1391 222.4L1363.67 221.733L1336.33 221.2L1369.67 232.4Z" fill="${a}"/>\n    <path d="M1122.33 234.8C1103.13 237.6 1047.67 246.667 1045.67 247.2C1043.4 247.867 1076.6 258.4 1101.67 264.8C1123.8 270.667 1127 271.067 1142.33 271.2C1156.07 271.333 1164.07 270.4 1187.67 266.267C1203.4 263.467 1218.33 260.8 1220.87 260.267C1225.13 259.333 1221.93 258 1188.2 245.6C1146.6 230.4 1149.27 230.8 1122.33 234.8Z" fill="${a}"/>\n    <path d="M168.2 203.733C160.333 212.133 157 217.467 149.133 233.067C143.933 243.6 139.933 252.667 140.333 253.333C141.667 255.6 145.8 254.8 148.467 251.867C150.467 249.6 151.933 249.2 156.2 250C161.133 250.667 161.933 250.4 165.667 246C173.667 236.533 184.867 238.8 183.133 249.467C182.467 253.333 183 255.6 185.267 259.2C187 261.733 189.267 264.133 190.333 264.533C192.067 265.067 246.867 276.8 368.867 302.667C383 305.733 394.733 308 395 307.733C395.133 307.467 399.267 295.867 404.333 282C409.267 268 415.933 250.4 419.133 242.933C422.333 235.333 425 228.667 425 228C425 227.467 423 226.667 420.733 226.133C416.067 225.2 312.6 214.933 238.467 208C200.467 204.533 194.467 203.6 188.067 200.8C184.2 198.933 180.6 196.533 180.2 195.333C179.8 194.267 179 193.333 178.467 193.467C178.067 193.467 173.4 198.133 168.2 203.733Z" fill="${a}"/>\n    <path d="M619 199.733C607 205.6 607 205.6 625 207.333C643.4 209.067 702.867 216.267 726.333 219.467C828.333 233.467 904.867 253.333 997.667 289.733C1038.47 305.867 1080.33 324.533 1149.67 357.733C1189.13 376.667 1197.8 381.2 1198.07 383.6C1198.6 387.6 1195.53 388.933 1182.2 390.533C1166.73 392.533 1098.87 394.667 1052.07 394.667C1030.6 394.667 1013 394.933 1013 395.2C1013 395.6 1014.6 399.467 1016.47 403.867L1020.07 412H1074.2C1162.07 412 1206.33 409.067 1220.2 402.533C1223.53 401.067 1231 395.6 1236.6 390.4C1242.33 385.333 1249.67 379.2 1252.73 376.933L1258.6 372.667L1215.4 351.333C1147.27 317.467 1105 299.6 1050.33 281.333C933.267 242.133 832.067 220.533 669.667 200C652.067 197.867 635.8 195.733 633.667 195.333C630.733 194.8 626.6 196.133 619 199.733Z" fill="${a}"/>\n    <path d="M589.4 212C584.733 213.333 573 215.467 563.4 216.667C544.067 219.067 523.267 222.267 519 223.6C517.533 224 535.267 227.6 558.333 231.467C632.867 243.867 679.8 254.4 736.333 271.333C822.733 297.333 893.133 327.467 983.933 377.2L1008.87 390.8L1050.73 390.667C1123.27 390.533 1191.13 387.733 1194.07 384.667C1195.27 383.467 1119.67 346.933 1071.67 325.333C948.867 270.267 862.067 243.6 750.6 226.667C711 220.667 612.733 209.2 603.267 209.467C600.2 209.6 593.933 210.667 589.4 212Z" fill="${a}"/>\n    <path d="M497 234.667C695.667 268 776.067 293.2 886.333 356.533C899.133 363.867 918.2 374.8 928.6 380.8C939 386.667 949.8 392 952.6 392.4C958.6 393.467 977.667 393.333 991.667 392.133L1001.67 391.333L983 381.067C897.133 334.133 840.467 309.2 761 283.067C694.2 261.2 635.133 247.6 542.333 232.533C514.867 228.133 509.667 227.6 481.667 227.333L451 227.067L497 234.667Z" fill="${a}"/>\n    <path d="M1.39996 230.4C-1.00004 236.267 4.33329 295.2 10.3333 330.667C11.8 339.067 13.5333 352.933 14.2 361.333C15.4 375.467 18.7333 388.267 22.6 392.667C23.1333 393.333 23.2666 378 22.8666 358.667C22.2 329.2 22.3333 321.733 24.2 313.467C27.5333 297.733 34.8666 288 43.4 288C49.9333 288 63.8 301.867 75.4 319.867C83.1333 332 106.067 385.467 123.933 432.933C125.933 438.533 127.667 440.667 132.067 443.333C143 449.733 146.6 454.667 148.867 467.333L151.133 478.667L170.067 487.2C180.467 491.867 189 495.333 189 494.8C189 494.4 186.867 490.533 184.333 486.267C172.2 466 167 454.667 159.4 430.8C156.333 420.8 154.333 416.8 150.333 412.667C143 405.067 138.333 394 129.133 362.667C120.2 332.133 115.267 310.667 108.867 275.333C106.6 262.133 104.467 251.067 104.2 250.8C103.933 250.533 80.8666 245.467 53 239.467C11 230.4 1.93329 228.8 1.39996 230.4Z" fill="${a}"/>\n    <path d="M425 238.933C419.667 250.533 399.667 304.4 399.667 307.467C399.667 308.533 403.267 310 409.4 311.2C414.6 312.4 441.533 318.133 469 324C496.467 329.867 519.8 334.933 520.867 335.333C522.2 335.867 522.333 336.533 521.4 337.467C520.6 338.267 506.333 335.733 478.867 330C446.333 323.067 399.933 313.333 399.133 313.333C398.333 313.333 401.267 428.933 402.333 443.733C405 480.8 405.533 496.8 403.8 501.333C403 503.733 402.6 506 402.867 506.4C403.267 506.667 420.867 513.467 441.933 521.333L480.333 535.6L481.133 508.8C483 448.8 495.533 413.333 526.6 380.533C540.733 365.733 556.067 357.6 577.933 353.333C590.333 350.933 613 352.133 623.667 356C636.733 360.533 664.467 375.067 675 382.933C696.067 398.533 722.467 429.467 746.2 466.267C751.533 474.533 756.467 481.333 757 481.333C757.667 481.333 766.2 482.533 775.933 483.867C785.667 485.333 805.4 487.733 819.667 489.333C833.933 490.8 847.533 492.4 849.933 492.8C854.067 493.6 854.2 493.333 860.2 481.733C870.867 461.333 887.533 441.467 911 421.467C925.133 409.333 933.133 403.733 942.467 399.333L949.4 396.133L944.867 394.267C942.333 393.2 926.6 384.267 909.667 374.4C865.8 348.8 853 341.733 822.333 326.933C790.467 311.467 771.8 303.867 739.667 293.2C688.867 276.4 633 262.933 551.667 248C522.6 242.667 434.067 228 431 228C430.6 228 427.8 232.933 425 238.933Z" fill="${a}"/>\n    <path d="M169.267 247.6L165.667 251.2L169.667 252.8C177.133 256 179.533 254.4 179.667 246.267C179.667 242.667 173.4 243.467 169.267 247.6Z" fill="${a}"/>\n    <path d="M109 252.667C109 254.933 116.6 295.867 119.667 310.667C126.333 341.867 140.067 388.933 145.667 400C147.4 403.333 150.333 407.467 152.333 409.333L156.067 412.667L155.267 398C154.867 387.6 152.867 375.333 148.6 356C141.4 323.467 139 308 136.333 278.8C135.267 266.8 134.2 256.8 134.067 256.667C133.267 256.267 112.2 252 110.6 252C109.8 252 109 252.267 109 252.667Z" fill="${a}"/>\n    <path d="M138.333 258.933C138.333 262.533 142.467 303.733 143.667 312.4C145.267 323.333 148.067 336.933 152.467 356C157.267 376.4 159.667 392.533 159.667 404.667V415.467L176.733 421.867C278.333 460.8 397.933 504.8 398.867 503.867C401.133 501.733 401.267 482.133 399.133 454C398.067 438.533 396.6 400.933 396.2 370.4C395.667 339.867 394.867 314.133 394.333 313.333C393.4 311.867 389.4 310.933 268.6 285.2L187.4 268L183.533 271.067C181.4 272.667 179.267 275.6 178.867 277.6C177.8 282.4 173.533 286.667 169.933 286.667C164.867 286.667 161.267 282.933 158.867 275.333C156.867 269.2 155.933 268 152.733 267.333C149.8 266.667 145.933 262.933 144.467 259.2C144.333 259.067 143 258.533 141.4 258.133C139.267 257.467 138.333 257.733 138.333 258.933Z" fill="${a}"/>\n    <path d="M161.667 272.133C163.8 279.333 165.8 282 169.133 282.4C171.667 282.667 172.867 282 174.067 279.333C176.467 274.133 176.2 273.6 170.2 272C167.267 271.2 163.933 270.133 162.733 269.733C161.133 269.067 160.867 269.6 161.667 272.133Z" fill="${a}"/>\n    <path d="M36.5999 295.733C29.5333 303.067 27.2666 311.867 26.8666 333.333L26.4666 352.667L28.3333 344.133C31.5333 330.533 36.5999 320.533 44.0666 313.867C47.7999 310.533 52.4666 307.467 54.5999 307.067C56.7333 306.667 58.5999 305.867 58.9999 305.333C60.1999 303.467 46.5999 292 43.2666 292C41.5333 292 38.4666 293.733 36.5999 295.733Z" fill="${a}"/>\n    <path d="M52.9999 311.6C46.9999 315.6 40.7333 322 38.3333 326.667C28.3333 346.4 23.3999 405.2 28.3333 444.667C32.9999 481.333 35.7999 494.4 45.2666 524C54.0666 551.333 68.4666 574.4 80.8666 580.933C85.6666 583.467 88.8666 584 97.5333 584C106.867 584 162.467 578.933 179.667 576.533C194.333 574.4 202.733 566.667 205.8 552.133C207.8 542.933 208.733 544 184.467 530.667C154.467 514.267 150.6 509.467 147.8 485.333C144.467 457.2 143.4 454.933 129.667 446.267C124.467 443.067 123.8 442 112.467 413.2C86.4666 347.333 75.5333 323.6 66.9999 314.267C61.9333 308.8 58.1999 308.133 52.9999 311.6ZM63.9333 340.667C86.1999 355.867 105.267 428.267 103.267 490C102.333 516.4 100.067 529.333 94.0666 541.333C76.1999 576.667 47.1333 535.2 34.9999 457.333C33.7999 449.6 32.4666 431.333 32.0666 416.667C31.1333 376.133 35.5333 353.333 46.3333 342.267C52.3333 336.267 56.8666 335.867 63.9333 340.667Z" fill="black"/>\n    <path d="M48.7333 345.333C46.2 347.867 45 350.267 45.4 351.733C48.2 360.533 63.8 400.667 64.7333 401.6C65.4 402.267 66.3333 398 66.7333 391.067C67.2667 384.667 68.8667 374.4 70.3333 368.267L73 357.2L69.5333 352C65.8 346.4 58.8667 341.333 55.1333 341.333C53.8 341.333 51 343.2 48.7333 345.333Z" fill="black" fill-opacity="0.5"/>\n    <path d="M39.9333 362.933C38.7333 367.333 38.8666 369.2 40.4666 371.867C41.4 373.733 45.9333 385.733 50.3333 398.533C57.8 420.4 59.2666 423.867 60.0666 422.533C65.4 413.467 65.4 414.133 60.8666 403.733C58.4666 398.4 53.6666 385.867 50.2 376C46.8666 366.133 43.4 357.867 42.7333 357.733C41.9333 357.467 40.7333 359.733 39.9333 362.933Z" fill="black"/>\n    <path d="M74.4666 368.933C70.7333 382.667 69.1333 408.933 71.9333 411.733C75.4 415.2 77 413.467 77 406.267C77 402.533 77.9333 393.6 78.8666 386.667C80.7333 374.933 80.6 373.6 78.4666 368.667L76.0666 363.333L74.4666 368.933Z" fill="black"/>\n    <path d="M36.2 383.6C35.1333 390.533 36.3333 447.867 37.5333 449.067C37.9333 449.467 42.6 445.6 47.8 440.4L57.2666 431.067L48.2 404.133C43.1333 389.467 38.6 377.333 38.0666 377.333C37.5333 377.333 36.7333 380.133 36.2 383.6Z" fill="black" fill-opacity="0.5"/>\n    <path d="M83.2666 388C82.7333 390.533 81.9333 398.933 81.4 406.667C80.7333 419.2 81 421.467 83.4 427.067L86.2 433.333L90.8666 431.067C94.6 429.333 95.4 428.267 95 426.133C94.6 424.533 93.1333 417.867 91.8 411.333C90.3333 404.667 88.0666 395.733 86.6 391.333L84.2 383.333L83.2666 388Z" fill="black" fill-opacity="0.5"/>\n    <path d="M47.2666 446.8L38.7333 455.467L39.7999 462.133C40.3333 465.733 40.8666 469.6 40.9999 470.667C41.1333 475.2 42.9999 476.133 47.7999 474.133C50.3333 473.067 54.5999 471.333 57.2666 470.267L62.1999 468.267L60.1999 461.067C59.2666 457.2 58.3333 451.6 58.1999 448.667C58.1999 445.733 57.6666 442.133 56.9999 440.667C56.0666 438.267 55.1333 438.8 47.2666 446.8Z" fill="black"/>\n    <path d="M88.6 442.267C87.2667 443.467 87.5333 454 88.8667 457.6C89.5333 459.333 92.2 463.067 94.8667 466L99.6667 471.333L98.8667 458.667C98.3333 451.733 97.4 444.933 96.7333 443.6C95.5333 441.333 90.3333 440.4 88.6 442.267Z" fill="black" fill-opacity="0.5"/>\n    <path d="M85.9333 464.933C85.6667 465.467 84.6 468.267 83.6667 471.067C82.0667 476.133 82.2 476.4 88.3333 485.467C91.8 490.533 95.8 495.333 97.1333 496.133C99.5333 497.333 99.6667 496.8 99.6667 488.533C99.6667 480.533 99.2667 479.067 95 473.333C89.6667 466 86.8667 463.467 85.9333 464.933Z" fill="black"/>\n    <path d="M52.4666 476.533C48.0666 478.133 44.3333 480.133 44.0666 480.933C42.6 485.2 52.3333 514.933 60.6 531.333C68.4666 547.2 68.4666 547.467 66.2 504.667C64.8666 479.467 63.8 473.2 61.1333 473.467C60.7333 473.467 56.7333 474.8 52.4666 476.533Z" fill="black" fill-opacity="0.5"/>\n    <path d="M69.5333 481.733C69.1333 483.467 69.3999 494 70.1999 505.2C70.9999 516.4 71.6666 530.133 71.6666 535.867C71.6666 545.067 72.8666 549.333 75.6666 549.333C76.0666 549.333 76.3333 533.467 76.3333 514V478.667H73.3999C71.3999 478.667 70.0666 479.733 69.5333 481.733Z" fill="black"/>\n    <path d="M80.6 488.933C79.4 495.6 79.4 530.667 80.4666 541.2C81.5333 551.2 83.8 551.6 89.2666 542.667C93.2666 536.133 96.6 524.533 98.2 511.6L99.1333 503.333L93.6666 498C90.6 495.067 86.6 490.667 84.7333 488.267L81.4 483.733L80.6 488.933Z" fill="black" fill-opacity="0.5"/>\n    <path d="M1568.33 319.467C1482.47 322.533 1316.07 351.2 1273.13 370.4L1267.4 373.067L1278.87 379.333L1290.47 385.6L1314.73 378.133C1375.93 359.333 1403 353.333 1474.33 342.133C1504.33 337.467 1521.93 335.067 1549.67 331.733C1567.67 329.6 1629.53 329.6 1639 331.6C1642.6 332.4 1645.8 332.933 1646.07 332.667C1646.33 332.533 1643.93 330.533 1640.87 328.267C1637.4 325.733 1631.93 323.333 1626.47 322.133C1617.13 320.133 1588.47 318.8 1568.33 319.467Z" fill="${a}"/>\n    <path d="M1565.67 334.267C1520.47 338.133 1435.4 351.2 1393 360.667C1369.67 365.867 1342.33 373.467 1310.87 383.333C1292.07 389.333 1291.27 389.733 1277.93 400.267C1250.47 422 1233 442.4 1203 488C1177.67 526.4 1176.87 527.733 1178.73 528.933C1179.53 529.467 1185.4 530.133 1191.67 530.4L1203 530.933L1214.6 510.4C1229.13 484.667 1243.67 463.867 1261.27 443.467C1284.33 416.667 1303.8 403.2 1330.33 395.6C1348.2 390.4 1407.67 376.533 1433.8 371.333C1496.73 358.8 1577.67 349.333 1621.93 349.333C1637.13 349.333 1639.8 349.733 1645 352.267C1652.2 356 1655.8 360.8 1657.13 368.267C1657.93 373.2 1658.07 372.533 1658.2 363.867C1658.33 352.533 1655.4 340.667 1651.93 338.8C1645.93 335.6 1621.93 333.333 1596.87 333.6C1582.6 333.733 1568.6 334 1565.67 334.267Z" fill="${a}"/>\n    <path d="M1591.67 354.267C1539.4 357.6 1475.13 366.4 1422.33 377.467C1403.27 381.467 1338.2 397.067 1337.53 397.733C1335.67 399.6 1307.13 513.2 1308.2 514.4C1310.2 516.267 1414.73 499.333 1475.67 487.2C1518.73 478.667 1580.33 463.867 1582.6 461.6C1584.33 459.867 1619.53 353.333 1618.6 352.933C1618.07 352.667 1605.93 353.333 1591.67 354.267Z" fill="black" fill-opacity="0.5"/>\n    <path d="M1623.93 354.133C1621.93 358 1588.73 458.933 1589.27 459.467C1590.07 460.133 1635.8 445.733 1637.13 444.4C1638.47 443.067 1648.07 409.6 1651 395.6C1652.07 390.533 1653 381.467 1653 375.333C1653 365.333 1652.6 363.733 1649.67 360.133C1646.07 355.867 1641.4 354 1631.4 352.667C1626.2 351.867 1625 352.133 1623.93 354.133Z" fill="black" fill-opacity="0.5"/>\n    <path d="M583 356.133C561.4 359.333 543.667 368.133 529.667 382.8C499.8 414.133 486.867 449.467 485.533 504L484.867 528.667L491.133 517.467C495.8 509.067 498.467 501.733 502.333 486.8C512.467 447.733 520.6 427.867 532.333 413.067C539.667 404 553 394.667 565 390.533C577.933 386 602.067 385.467 617.133 389.2C646.067 396.4 671.4 415.6 705.4 456.267L718.333 471.6L733.933 475.733C742.467 478 749.667 479.733 749.933 479.6C750.6 478.8 727.8 445.333 717.133 431.333C686.867 391.6 646.6 363.733 609.267 356.533C598.467 354.533 594.867 354.4 583 356.133Z" fill="${a}"/>\n    <path d="M1253.67 380.933C1250.07 383.6 1243.4 389.067 1239 393.333C1229.8 402 1221.53 407.067 1213 409.2C1204.87 411.2 1187.53 413.333 1179.67 413.333H1173.27L1138.2 461.6C1119 488.267 1102.73 510.667 1102.2 511.467C1101.4 512.4 1111.4 515.067 1134.73 519.867C1153.13 523.6 1169.4 526.667 1170.6 526.667C1172.07 526.667 1180.07 515.867 1193.8 494.933C1205.27 477.6 1219.8 456.4 1226.07 448C1239.27 430.4 1259.4 409.733 1275.4 397.467C1281.4 392.8 1286.33 388.667 1286.33 388.133C1286.2 387.067 1264.2 376 1262.07 376C1261.13 376 1257.4 378.267 1253.67 380.933Z" fill="${a}"/>\n    <path d="M577.4 391.333C549 396.533 530.6 414.267 517.4 449.333C513.667 459.067 504.733 490.8 505.4 491.6C505.667 491.867 508.067 488.8 510.733 484.933C529.533 456.4 562.333 436 601 428.533C618.6 425.2 642.733 426.533 671.4 432.533C675.933 433.467 679.667 433.733 679.667 433.2C679.667 432.533 674.467 427.467 668.067 422C647 403.6 627.667 393.867 605.667 390.667C593.933 389.067 589.4 389.2 577.4 391.333Z" fill="${a}"/>\n    <path d="M969.533 397.333C953 398.8 944.867 401.333 933 409.2C905.533 427.2 875.533 459.467 862.867 484.267C857.667 494.4 857 493.733 873.267 495.333L882.067 496.267L885 490.533C893.8 473.2 921.4 437.067 932.333 428.8C944.867 419.2 959.4 415.467 991.667 413.2C1003.8 412.4 1013.93 411.467 1014.2 411.2C1014.47 410.933 1013 407.467 1011.13 403.333L1007.53 396L994.6 396.133C987.533 396.267 976.2 396.8 969.533 397.333Z" fill="${a}"/>\n    <path d="M1322.2 402C1313.13 405.333 1300.33 412.267 1293 417.733C1277 429.733 1255.8 453.733 1236.6 481.467C1227 495.333 1209.93 525.333 1210.87 526.4C1211.8 527.2 1300.87 516.533 1301.93 515.467C1302.33 515.067 1306.07 500.8 1310.33 483.733C1317 456.933 1329.13 409.6 1331.13 402.267C1331.93 399.467 1329.13 399.333 1322.2 402Z" fill="black" fill-opacity="0.5"/>\n    <path d="M1059.67 416.133C982.333 416.933 969.533 417.733 954.333 422.133C941.933 425.733 929.8 433.467 926.333 440C925.133 442.267 927 442.4 960.733 442.267C995.533 442 996.333 442 996.333 444.667C996.333 447.2 995.267 447.333 957.4 448C933.933 448.4 918.067 449.2 917.267 450C908.867 459.867 897 476.267 897 478.267C897 478.8 918.867 479.2 945.667 478.933C989.667 478.667 994.467 478.8 995.267 480.8C995.667 482 995.267 483.467 994.2 484.133C993.133 484.8 969.8 485.333 942.333 485.333H892.2L888.733 492.533C883.4 503.333 882.733 508.4 886.333 512C889.267 514.933 889.533 514.933 920.867 514.133C938.2 513.733 984.867 512.933 1024.73 512.533L1097 511.6L1116.2 485.467C1145.93 444.667 1166.33 416.267 1166.33 415.467C1166.33 414.933 1159.93 414.8 1152.07 414.933C1144.07 415.067 1102.6 415.6 1059.67 416.133ZM1068.87 422C1071.13 423.067 1074.6 426.533 1076.73 429.6C1080.07 434.8 1080.33 436 1080.2 449.867C1080.2 472.133 1075.27 486 1064.33 495.733C1051 507.467 1027 506.533 1018.6 494C1013.8 487.067 1008.87 473.867 1008.07 466C1006.73 452.8 1016.07 429.867 1025 424.8C1035 418.933 1059.93 417.333 1068.87 422Z" fill="#DDDDDD" fill-opacity="0.5"/>\n    <path d="M1038.47 424.133C1024.73 426.4 1019.67 431.733 1014.2 449.867C1010.6 461.333 1011.4 470.8 1016.73 482.8C1022.73 495.733 1028.6 500 1040.73 500C1051 500 1057.13 497.6 1063.8 490.8C1072.07 482.667 1075.8 471.333 1076.6 452C1077.13 439.2 1076.87 437.6 1074.07 432.8C1068.47 423.2 1058.6 420.8 1038.47 424.133ZM1037.53 434.667C1047.8 438.533 1047.8 465.733 1037.53 474.933C1027.27 484 1016.73 476.667 1016.73 460.267C1016.73 450.667 1019.93 442.533 1025.8 437.333C1030.73 433.067 1032.33 432.667 1037.53 434.667Z" fill="#DDDDDD" fill-opacity="0.5"/>\n    <path d="M1645.53 431.6C1643.4 439.333 1641 446.533 1640.2 447.333C1638.47 448.933 1595.53 462.533 1568.33 469.867C1491 490.8 1355.53 514.667 1241 527.333C1222.47 529.333 1208.2 531.6 1206.07 532.8C1199.67 536.267 1188.2 534.933 1142.47 525.2L1097.67 515.867L1003.27 516.8C951.4 517.333 909.133 517.867 909.4 518.133C909.8 518.533 951.8 528 967.667 531.2C996.467 537.067 1029.27 541.6 1064.33 544.667C1101 547.867 1214.33 553.6 1222.33 552.667C1226.33 552.267 1248.6 549.2 1271.67 545.867C1422.2 524.533 1521.67 507.467 1573.67 494C1598.07 487.733 1610.73 483.6 1633 474.667C1672.87 458.667 1679.67 454.8 1679.67 447.467C1679.67 442.667 1674.2 433.333 1668.2 427.733C1665 424.8 1652.07 417.333 1650.07 417.333C1649.67 417.333 1647.67 423.733 1645.53 431.6Z" fill="${a}"/>\n    <path d="M160.067 420.933C160.333 421.6 162.867 428.933 165.667 437.333C171.267 454.667 176.333 465.333 188.067 484.933L196.2 498.533L305.4 546C365.4 572.133 414.867 593.2 415.267 592.933C415.533 592.533 413.267 587.2 410.2 581.2C404.733 570.267 404.467 569.333 400.733 539.333C398.6 522.4 396.733 508.533 396.6 508.533C396.467 508.4 384.6 504 370.333 498.667C314.333 477.867 222.733 443.6 192.6 432.133C175 425.467 160.467 420 160.067 420C159.8 420 159.8 420.4 160.067 420.933Z" fill="${a}"/>\n    <path d="M600.067 432.533C580.067 436.4 561.533 444.267 543.933 456.4C518.6 473.867 496.2 508.533 483.133 550.667C471.533 588.267 469.267 609.867 473.667 644.667C478.467 683.6 485.8 708.8 501.133 738.8C528.333 792.267 567.533 832 610.867 850.267C640.6 862.8 670.6 868.8 699 867.6C731.533 866.4 756.2 856.533 794.733 829.6L809.133 819.6L808.2 811.6C807.267 804.133 807.533 803.067 813 792L818.733 780.267L812.867 752.8C809.667 737.733 806.733 725.867 806.333 726.4C805.8 726.933 804.733 730 803.8 733.067C801 742.8 793.4 758.533 785.8 769.867C765.8 799.867 734.733 820.533 700.467 826.533C689 828.667 665.8 828.267 652.333 826C617.667 819.867 578.333 795.6 553 764.8C502.867 703.333 489.933 620.133 520.467 555.333C527.4 540.533 535.133 529.6 547.533 516.933C560.333 503.867 574.733 493.867 589.533 488C608.6 480.4 614.467 479.333 639 479.333C659 479.333 662.867 479.733 671.667 482.4C683.8 486.133 698.2 493.333 722.867 507.867C733 513.733 741.533 518.667 741.933 518.667C743 518.667 734.067 503.6 721.533 484.667C714.867 474.4 703.8 459.867 697.267 452.533L685.267 439.067L666.733 435.333C644.333 430.933 615.133 429.733 600.067 432.533Z" fill="black"/>\n    <path d="M1683.27 445.333C1684.2 453.467 1680.87 457.333 1667.8 463.867C1654.33 470.667 1620.87 484 1604.73 489.2C1551.93 506 1454.47 523.6 1260.33 551.467C1219.67 557.333 1214.73 557.467 1142.2 553.333C1051.27 548.4 1016.33 544.667 968.333 535.2C941.133 529.867 891.4 518.667 887.267 517.067C882.467 515.2 879.267 509.067 880.333 504C881.133 500.267 881 500.267 874.067 499.467C870.2 499.067 864.6 498.533 861.8 498.4L856.467 498L853.933 506C849.4 520.8 852.733 529.867 865.4 537.2C892.6 552.667 983.8 569.067 1104.33 580.267C1128.87 582.533 1220.47 582.533 1245.67 580.267C1361.93 569.733 1463 553.6 1549 532C1589.67 521.733 1622.2 511.067 1672.6 491.2C1688.6 484.933 1703 479.2 1704.6 478.533C1707.53 477.467 1707.53 477.2 1705.67 471.867C1703.53 466.133 1695.4 453.867 1687.27 444.667L1682.6 439.333L1683.27 445.333Z" fill="${a}"/>\n    <path d="M723.667 480C724.467 481.467 728.6 488.267 732.867 495.067C737.133 501.733 743.933 513.333 748.067 520.667C769 557.867 786.2 612.8 806.467 706.667C815.4 748.267 822.333 779.2 822.867 779.733C823.133 779.867 842.6 783.467 866.067 787.6L908.733 795.2L917.267 789.6C944.2 772.133 959.8 770.267 1056.33 773.333C1100.07 774.8 1116.73 774.8 1139.93 773.467C1174.47 771.467 1231.27 766.133 1232.6 764.8C1234.07 763.467 1233.8 635.733 1232.47 607.733L1231.4 585.6L1191.8 586.267C1139 587.333 1091.67 584 1012.33 573.867C945.267 565.333 888.067 552.8 866.2 541.867C848.867 533.2 844.333 521.6 850.733 502.8L852.733 497.333L848.467 496.667C846.2 496.267 831.133 494.533 815 492.667C798.867 490.8 779.933 488.4 773 487.333C766.067 486.267 760.2 485.733 759.933 486C759.533 486.267 763 493.067 767.667 500.933C778.6 520.133 795.267 554.533 802.2 572.4C805.267 580.267 811.4 597.733 815.8 611.333C820.2 624.933 824.333 636 825 636C825.667 636 837.933 638.133 852.467 640.667C866.867 643.2 901.267 648.667 928.867 652.8C956.467 656.8 979.533 660.667 980.2 661.333C982.467 663.467 974.333 682.533 969.133 687.2C965.267 690.667 960.6 690.4 915.667 683.867C835.267 672.4 831.667 671.6 827.267 664.133C826.067 662.133 823.933 655.067 822.467 648.533C819.8 636.4 810.867 607.2 804.467 589.6C794.2 560.8 775 520.4 759.933 495.333L753.533 484.667L739.667 481.067C722.2 476.533 721.8 476.533 723.667 480ZM1138.47 662.4C1159.8 668.4 1173 683.067 1173 700.8C1173 713.867 1161.93 734.8 1149.8 744.4C1141.53 750.933 1121.8 760.533 1111 763.333C1091.53 768.4 1075 767.333 1055.4 759.867C1046.73 756.533 1043.93 754.533 1037.53 747.6C1026.87 736.133 1024.47 730.133 1025.4 717.6C1025.93 710.8 1027.27 705.467 1029.67 700.667C1033.8 692.133 1045.8 679.333 1055 673.467C1061.27 669.467 1080.6 662.667 1093.4 660C1102.2 658.133 1128.47 659.467 1138.47 662.4Z" fill="${a}"/>\n    <path d="M1091 664.667C1086.6 665.733 1079.4 667.733 1075 669.067C1067.27 671.467 1067 671.733 1067.67 675.467C1068.07 677.6 1068.33 683.467 1068.33 688.667C1068.33 700.133 1063.67 711.067 1055.27 719.733C1049.4 725.733 1043.8 728 1034.6 728H1028.87L1032.47 734.8C1038.47 745.6 1047.93 753.333 1061.13 758C1071.13 761.6 1074.07 762 1087.67 762C1105.93 762 1116.87 759.067 1134.33 749.6C1148.6 741.867 1156.6 734 1163 720.933C1171.93 702.8 1170.73 689.867 1158.87 678.133C1155.67 674.933 1150.47 670.933 1147.27 669.467C1134.33 663.2 1107.53 660.933 1091 664.667Z" fill="#DDDDDD" fill-opacity="0.5"/>\n    <path d="M624.6 482.8C607.4 484.533 583.667 492.4 583.667 496.4C583.667 499.2 609.267 536.4 623.133 553.467C629.933 562 639.533 572.667 644.333 577.067C656.333 588.4 659.133 588.267 670.333 576.933C674.867 572.4 685 560.667 692.867 550.8C700.6 541.067 710.733 528.4 715.4 522.8C725 511.067 725.667 512.8 708.067 503.2C692.733 494.8 673.933 486.8 664.467 484.667C653.8 482.4 637.4 481.6 624.6 482.8Z" fill="black" fill-opacity="0.5"/>\n    <path d="M1685.67 490.267C1627.8 513.333 1597.4 523.467 1551 535.333C1472.33 555.467 1367.27 572.667 1271 581.467C1253.4 583.067 1238.2 584.533 1237.27 584.8C1235.8 585.2 1235.67 590.533 1236.6 612.933C1237.13 628.267 1237.67 668.933 1237.67 703.467V766.4L1244.33 767.2C1248.07 767.6 1256.07 768 1262.33 767.867C1271.93 767.867 1273.13 767.6 1270.33 766.267C1258.6 760.933 1252.07 751.067 1251 737.2C1249.53 719.467 1247.67 636.8 1248.73 635.733C1249.27 635.2 1265.53 632.667 1284.87 630.133C1407.93 613.467 1545 583.067 1621.8 555.2C1650.6 544.8 1698.2 524 1698.87 521.6C1700.6 515.867 1707.8 482.4 1707.4 482.133C1707.13 481.867 1697.4 485.6 1685.67 490.267Z" fill="${a}"/>\n    <path d="M152.467 491.6C153.533 500.533 156.467 507.2 161.933 512.267C169 519.067 209.667 540.4 257 562.267C335.667 598.8 470.6 660.133 471.133 659.733C471.4 659.467 471 655.067 470.333 650C469.667 644.8 468.733 636.133 468.333 630.667L467.533 620.533L452.6 614.133C444.333 610.533 373.667 579.867 295.4 545.867C217.133 511.867 152.733 484 152.333 484C151.933 484 152.067 487.467 152.467 491.6Z" fill="${a}"/>\n    <path d="M564.733 506.4C557.533 511.867 556.333 513.333 556.6 516.8C557.133 523.467 568.2 543.867 583.4 565.6C591.533 577.2 600.467 591.733 603.533 598C610.867 612.933 612.867 613.467 623.267 604C627.4 600.133 632.867 596.133 635.267 594.933C637.933 593.733 639.667 591.867 639.667 590.4C639.667 589.067 633.533 579.067 625.933 568.267C618.333 557.467 605.933 539.733 598.467 528.8C583.133 506.8 577.533 500 575 500C573.933 500 569.4 502.933 564.733 506.4Z" fill="black"/>\n    <path d="M401 511.6C401.133 512.133 402.733 525.6 404.867 541.333L408.6 570L415.4 583.467L422.067 596.8L442.6 605.6C453.8 610.533 463.933 614.933 465.133 615.333C467.133 616 467.533 614.533 468.333 603.733C469.4 588.133 473.4 568.4 478.333 552.8C480.467 546.267 482.067 540.667 481.933 540.4C481.533 540 408.2 512.667 404.067 511.467C402.333 510.933 401 510.933 401 511.6Z" fill="${a}"/>\n    <path d="M729.533 520C724.467 522 673 586.8 673 591.2C673 591.6 676.2 593.467 680.067 595.2C688.467 599.2 696.867 606.133 703.8 614.933L708.867 621.467L713 613.333C715.267 608.933 723.533 594.667 731.533 581.6C739.4 568.667 747.8 554.267 750.2 549.867L754.6 541.6L751.933 536.4C749 530.667 736.733 518.667 734.067 518.8C733.133 518.8 731.133 519.333 729.533 520Z" fill="black"/>\n    <path d="M544.067 525.6C541.8 528 537.533 533.6 534.6 538C514.6 568 504.867 608.533 508.867 645.867C509.533 653.067 510.467 659.333 510.867 659.733C512.2 661.067 530.867 657.067 544.867 652.4C561.667 646.8 583.933 637.2 592.333 631.867L598.733 627.867L598.067 618.267C597.267 606.4 593.533 598 577.667 571.867C561.133 544.8 555.533 534.933 552.867 528C551.667 524.8 550.067 521.867 549.4 521.733C548.733 521.467 546.333 523.2 544.067 525.6Z" fill="black" fill-opacity="0.5"/>\n    <path d="M1677 536.933C1635.53 555.2 1604.2 566.4 1560.33 578.533C1473.8 602.667 1358.33 625.333 1266.33 636.4L1252.33 638L1252.73 676C1253 696.933 1253.8 721.2 1254.33 729.867C1255.8 749.333 1258.87 755.733 1269.67 761.2C1275.8 764.4 1277.53 764.667 1294.33 764.533C1319.93 764.533 1343.13 760 1410.33 742.4C1454.73 730.8 1475.27 724.667 1506.33 713.733C1537.93 702.667 1589.53 682.267 1608.07 673.6C1641.13 658 1661.8 633.6 1677.53 591.6C1682.73 577.6 1697.53 529.333 1696.73 528.8C1696.6 528.667 1687.67 532.267 1677 536.933Z" fill="black" fill-opacity="0.5"/>\n    <path d="M750.733 562.4C741.133 578.933 716.2 625.467 715 629.067C714.467 630.8 714.867 636.133 715.8 640.933C717.533 649.6 717.667 649.733 728.333 658.667C741.267 669.467 748.867 674.667 778.6 692.667C791.267 700.4 801.8 706.133 802.067 705.467C803.4 701.6 778.333 604.267 770.2 581.6C765.4 568.133 759.267 552.667 758.467 551.733C757.933 551.2 754.467 556 750.733 562.4Z" fill="black" fill-opacity="0.5"/>\n    <path d="M1654.33 642.133C1651.8 645.467 1646.2 651.467 1641.8 655.467C1637.53 659.467 1634.2 662.933 1634.47 663.2C1634.73 663.467 1636.47 664.4 1638.33 665.333C1640.2 666.267 1647.13 671.2 1653.8 676.133C1660.33 681.2 1666.47 685.333 1667.4 685.333C1669.27 685.333 1671.4 677.867 1672.47 667.867C1673.13 662.533 1672.73 658.4 1671.13 653.733C1669 647.333 1661.8 636 1659.93 636C1659.4 636.133 1656.87 638.8 1654.33 642.133Z" fill="${a}"/>\n    <path d="M825 641.6C825 645.2 829 660.133 830.6 662.533C833.533 667.2 841.267 669.2 877.667 674.533C959.4 686.533 962.333 686.933 965.8 684.667C969.133 682.533 972.067 677.6 975 669.2C977.133 663.2 978.2 663.733 960.6 661.2C950.6 659.867 949.933 659.867 948.2 662.533C943.133 669.6 937.133 673.6 931.4 673.6C926.6 673.6 839.8 660.267 838.333 659.333C836.333 658.133 833 649.467 833 645.6C833 643.2 832.2 641.333 830.867 640.8C827.533 639.467 825 639.867 825 641.6Z" fill="#FFC700"/>\n    <path d="M836.467 643.333C835.933 644.667 838.733 654.133 840.067 655.467C840.6 656.133 866.467 660.4 910.067 667.2C930.2 670.4 932.2 670.533 936.067 668.667C939.933 666.8 945.933 660.4 944.733 659.467C944.6 659.2 926.067 656.267 903.667 652.8C881.267 649.333 857.133 645.467 850.067 644.133C840.867 642.533 836.867 642.267 836.467 643.333Z" fill="#FFC700"/>\n    <path d="M573 648.8C539.4 658.267 514.333 666.8 513 669.333C512.2 670.933 512.467 674.533 514.067 680.133C517.8 693.333 521 699.067 525.667 700.267C535.933 702.933 615.667 689.2 615.667 684.667C615.667 684.267 614.2 681.067 612.467 677.467C608.6 669.867 605 656.8 605 650.267C605 646.267 604.467 645.333 600.867 644.133C595.4 642.267 597.133 642 573 648.8Z" fill="black"/>\n    <path d="M716.2 664.933C714.2 674.4 711 682 706.2 689.2C703.4 693.467 701 698 701 699.2C701 700.667 714.333 708 745 723.333C769.133 735.467 790.067 745.333 791.533 745.333C792.867 745.333 794.6 744.533 795.4 743.6C796.467 742.267 801.133 728.933 804.2 717.867C804.867 715.467 803.8 714.4 796.733 710.667C781.133 702.4 759 688.933 739 675.467C728.067 668 718.6 661.867 718.067 661.6C717.533 661.333 716.733 662.8 716.2 664.933Z" fill="black"/>\n    <path d="M1618.2 672.8C1589 687.733 1508.2 718.533 1463 732C1440.87 738.533 1389.27 752.133 1363.93 758.133C1324.07 767.333 1275.13 773.2 1252.47 771.2C1237.27 770 1221.8 770.133 1213.27 771.6L1207.53 772.667L1219.93 780.8C1226.73 785.333 1241.13 795.467 1252.07 803.333L1271.67 817.6L1284.07 813.467C1290.73 811.2 1326.6 800.933 1363.67 790.667C1487.27 756.133 1533.53 740.8 1620.33 705.333C1635 699.333 1650.2 693.333 1654.07 692.133C1657.93 690.933 1661.27 689.467 1661.27 688.667C1661.53 686.8 1638.87 670 1633.93 668.4C1630.07 667.2 1628.33 667.733 1618.2 672.8Z" fill="${a}"/>\n    <path d="M1674.33 682C1674.33 686.667 1669.67 691.067 1661.67 694C1657.93 695.333 1634.33 704.667 1609 714.667C1521 749.733 1484.73 761.6 1361 796C1329.13 804.933 1295.4 814.533 1286.2 817.333C1267.93 823.067 1264.07 823.6 1205.67 827.333C1079.4 835.333 994.2 835.333 932.333 827.333C912.2 824.8 874.467 818.667 841.8 812.667C827.8 810.133 815.533 808 814.333 808C812.2 808 812.333 809.333 814.867 824.267L817.667 840.533L843 846.133C857 849.2 892.333 857.867 921.667 865.467L975 879.333L1031.67 879.2C1100.47 878.933 1136.47 876.667 1240.6 865.6C1264.33 863.067 1276.2 861.2 1277.8 859.867C1279.13 858.933 1282.6 854.133 1285.8 849.333C1295 835.067 1296.33 834.4 1325.53 827.333C1353.8 820.667 1391.67 809.6 1461 787.867C1547 760.933 1598.47 742.267 1638.6 723.6L1651.67 717.467L1655.67 723.467C1657.93 726.667 1660.87 729.333 1662.2 729.333C1668.47 729.333 1679.53 696.133 1677.4 683.467C1676.6 678 1674.33 676.933 1674.33 682Z" fill="${a}"/>\n    <path d="M580.333 700.133C575.933 700.8 561.933 702.267 549.267 703.2C536.467 704.267 525.667 705.6 525 706.133C523.4 707.733 536.467 733.467 547.133 749.867C557.4 765.6 576.467 785.067 592.067 795.733C603.8 803.733 621.4 812.933 627.533 814.133L631.667 814.933V808.133C631.667 804.4 630.733 791.6 629.533 779.733C628.467 767.733 627 748.133 626.6 736C625.8 717.067 625.133 713.2 622.6 707.867C621 704.4 618.2 701.067 616.2 700.267C612.333 698.4 592.067 698.4 580.333 700.133Z" fill="black" fill-opacity="0.5"/>\n    <path d="M636.333 711.2C634.067 714.533 634.067 717.733 634.733 749.067C635.667 786.933 637.667 812.933 640.067 815.867C643 819.333 652.2 822.667 659.267 822.667H666.2L666.867 816.933C667.4 813.867 668.867 798.667 670.333 783.333C671.8 767.867 674.067 747.067 675.267 736.933C676.867 723.867 677.133 717.867 676.2 716.267C674.067 712.933 661.8 709.2 649.533 708.4C638.867 707.6 638.6 707.733 636.333 711.2Z" fill="black"/>\n    <path d="M689.4 716.933C685.933 720.267 685.133 722.267 683.267 734.667C679.267 760.667 674.2 807.2 674.6 815.333L675 823.333L687 823.2C693.667 823.067 702.867 822 707.667 820.8C726.6 815.733 753.8 800.133 767.4 786.533C775.4 778.533 790.6 756.4 790.067 753.6C789.8 752.667 777.667 746.533 763 740.133C748.333 733.6 732.2 726.4 727 724C715.267 718.667 700.067 713.333 696.2 713.333C694.6 713.333 691.533 714.933 689.4 716.933Z" fill="black" fill-opacity="0.5"/>\n    <path d="M1178.33 774.667C1144.6 778.133 1099.53 778.933 1045 776.933C956.333 773.867 946.733 775.333 912.2 797.333C909.667 798.933 903.8 798.133 865.667 791.467C841.667 787.333 821.933 784 821.8 784.267C821.667 784.533 819.667 788.667 817.4 793.6C813.533 801.6 813.4 802.533 815.4 803.2C822.733 805.467 894.733 817.733 921.8 821.333C974.333 828.4 1040.2 830.933 1105 828.133C1147.13 826.4 1254.47 820.267 1260.87 819.2L1265.27 818.533L1259.53 814.4C1256.33 812.133 1247.13 805.333 1239 799.333C1231 793.467 1218.87 785.067 1212.33 780.933C1199 772.667 1199.27 772.667 1178.33 774.667Z" fill="${a}"/>\n    </svg>\n      \n    `}render(){return this.node.innerHTML}}var k=function(t,e,n,a){return new(n||(n=Promise))((function(i,s){function r(t){try{o(a.next(t))}catch(t){s(t)}}function C(t){try{o(a.throw(t))}catch(t){s(t)}}function o(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,C)}o((a=a.apply(t,e||[])).next())}))};class A extends t{constructor(t=null,e="div",n=[],a){super(t,e,n),a.id?(this.winnerId=a.id,this.node.dataset.winnerId=a.id.toString()):(console.error("invalid id of winner"),this.winnerId=null,this.node.dataset.winnerId="unknown"),this.node.innerHTML=`\n      <span class="winner__id">${a.id}</span>\n      <span class="winner__car-image-wrap"></span>\n      <span class="winner__name">unknown</span>\n      <span class="winner__wins">${a.wins}</span>\n      <span class="winner__best-time">${a.time} s</span>\n    `,this.winnerName=this.node.querySelector(".winner__name"),this.carIconSvg=this.node.querySelector(".winner__car-image-wrap")}drawCarImage(t){this.carIconSvg.innerHTML=new Z(null,"div",["car__image"],t).render()}getCarDataFromApi(t){return k(this,void 0,void 0,(function*(){return yield g.getSpecifiedCar(t)}))}render(){return k(this,void 0,void 0,(function*(){if(this.winnerId){const t=yield this.getCarDataFromApi(this.winnerId);this.winnerName.textContent=t.name,this.drawCarImage(t.color)}return this.node}))}}var B=function(t,e,n,a){return new(n||(n=Promise))((function(i,s){function r(t){try{o(a.next(t))}catch(t){s(t)}}function C(t){try{o(a.throw(t))}catch(t){s(t)}}function o(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,C)}o((a=a.apply(t,e||[])).next())}))};class P extends t{constructor(t,e="div",n=[]){super(t,e,n)}sortWinnersList(){g.state.winners.sort(((t,e)=>{switch(g.state.winnerPageSort){case C.id:return t.id&&e.id?t.id-e.id:(console.error("winner id for sort not found"),0);case C.time:return t.time-e.time;case C.wins:return t.wins-e.wins;default:return 0}})),g.state.winnerPageOrder===o.DESC&&g.state.winners.reverse()}renderRowsWinnersTable(t){return B(this,void 0,void 0,(function*(){this.node.innerHTML="",t.forEach((t=>B(this,void 0,void 0,(function*(){const e=yield new A(null,"div",["table-body__row","winner"],t).render();this.node.append(e)}))))}))}render(){return B(this,void 0,void 0,(function*(){return this.sortWinnersList(),yield this.renderRowsWinnersTable(g.state.winners),this.node}))}}var G=function(t,e,n,a){return new(n||(n=Promise))((function(i,s){function r(t){try{o(a.next(t))}catch(t){s(t)}}function C(t){try{o(a.throw(t))}catch(t){s(t)}}function o(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,C)}o((a=a.apply(t,e||[])).next())}))};class $ extends t{constructor(t,e="div",n=[]){super(t,e,n),this.winnersTableHeader=new I(this.node,"div",["winners-table__head-wrap","table-head"]),this.winnersTableBody=new P(this.node,"div",["winners-table__body-wrap","table-body"]),this.initListeners()}initListeners(){this.winnersTableHeader.choiceSortId.addEventListener("click",this.onChangeSortListener.bind(this,C.id)),this.winnersTableHeader.choiceSortWins.addEventListener("click",this.onChangeSortListener.bind(this,C.wins)),this.winnersTableHeader.choiceSortTime.addEventListener("click",this.onChangeSortListener.bind(this,C.time)),this.winnersTableHeader.prevPageBtn.addEventListener("click",this.onChangeTablePageListener.bind(this)),this.winnersTableHeader.nextPageBtn.addEventListener("click",this.onChangeTablePageListener.bind(this))}onChangeTablePageListener(t){return G(this,void 0,void 0,(function*(){const e=t.currentTarget;if(e.classList.contains("table-head__navigation_prev"))--g.state.winnersCurrentPage;else{if(!e.classList.contains("table-head__navigation_next"))return void console.error(`invalid element for change winners table page: ${e}`);++g.state.winnersCurrentPage}yield g.fetchWinnersListToState(),yield this.render()}))}onChangeSortListener(t){return G(this,void 0,void 0,(function*(){if(t===g.state.winnerPageSort)return g.state.winnerPageOrder=g.state.winnerPageOrder===o.DESC?o.ASC:o.DESC,void(yield this.winnersTableBody.render());switch(t){case C.id:g.state.winnerPageSort=C.id;break;case C.wins:g.state.winnerPageSort=C.wins;break;case C.time:g.state.winnerPageSort=C.time;break;default:g.state.winnerPageSort=C.id}yield this.winnersTableBody.render()}))}render(){return G(this,void 0,void 0,(function*(){return this.winnersTableHeader.render(),yield this.winnersTableBody.render(),this.node}))}}class U extends t{constructor(e,n="div",a=[],i){super(e,n,a),this.node.classList.add(`${i}`,"page"),this.node.id=i,this.container=new t(this.node,"div",["winners__container","container"]),this.winnersTable=new $(this.container.node,"div",["winners__table","winners-table"])}render(){return t=this,e=void 0,a=function*(){return yield g.fetchWinnersListToState(),yield this.winnersTable.render(),this.node},new((n=void 0)||(n=Promise))((function(i,s){function r(t){try{o(a.next(t))}catch(t){s(t)}}function C(t){try{o(a.throw(t))}catch(t){s(t)}}function o(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,C)}o((a=a.apply(t,e||[])).next())}));var t,e,n,a}}class D extends t{constructor(t,e="div",n=["footer"]){super(t,e,n),this.node.innerHTML='\n      <div class="container footer__container">\n        <div class="personal-data">\n          <span class="personal-data__year">© 2022</span>\n          <a href="https://rs.school/js/" target="_blank">\n            <span class="personal-data__school-icon"></span>\n          </a>\n          <a href="https://github.com/fraterpavlo" target="_blank">\n            <span class="personal-data__github">fraterpavlo</span>\n          </a>\n        </div>\n      </div>\n  '}}var F=function(t,e,n,a){return new(n||(n=Promise))((function(i,s){function r(t){try{o(a.next(t))}catch(t){s(t)}}function C(t){try{o(a.throw(t))}catch(t){s(t)}}function o(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,C)}o((a=a.apply(t,e||[])).next())}))};const E=new class{constructor(){this.appContainer=document.querySelector("#app"),this.links={garage:new x(null,"div",["garage","page"],"garage"),winners:new U(null,"div",["winners","page"],"winners")}}updatePage(){return F(this,void 0,void 0,(function*(){const t=location.hash.slice(1)||"garage",e=yield this.links[t].render();this.appContainer.innerHTML="",this.appContainer.append(e||`page ${t} not found`)}))}start(){return F(this,void 0,void 0,(function*(){document.body.prepend(new e(null).node),document.body.append(new D(null).node),window.addEventListener("hashchange",this.updatePage.bind(this)),window.addEventListener("load",this.updatePage.bind(this))}))}};(new class{start(){E.start()}}).start()})();